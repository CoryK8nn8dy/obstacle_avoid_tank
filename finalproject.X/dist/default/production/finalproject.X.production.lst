

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Apr 16 12:53:01 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           ; Version 2.10
    56                           ; Generated 31/07/2019 GMT
    57                           ; 
    58                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F26K22 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    91  0000                     
    92 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    93  0000                     
    94 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    95  0000                     
    96                           	psect	nvCOMRAM
    97  000056                     __pnvCOMRAM:
    98                           	opt callstack 0
    99  000056                     _timer0ReloadVal:
   100                           	opt callstack 0
   101  000056                     	ds	2
   102                           
   103                           	psect	nvBANK0
   104  0000A4                     __pnvBANK0:
   105                           	opt callstack 0
   106  0000A4                     _timer1ReloadVal:
   107                           	opt callstack 0
   108  0000A4                     	ds	2
   109  0000A6                     _TMR0_InterruptHandler:
   110                           	opt callstack 0
   111  0000A6                     	ds	2
   112  0000A8                     _EUSART1_ErrorHandler:
   113                           	opt callstack 0
   114  0000A8                     	ds	2
   115  0000AA                     _EUSART1_OverrunErrorHandler:
   116                           	opt callstack 0
   117  0000AA                     	ds	2
   118  0000AC                     _EUSART1_FramingErrorHandler:
   119                           	opt callstack 0
   120  0000AC                     	ds	2
   121  0000                     _ANSELA	set	3896
   122  0000                     _ANSELB	set	3897
   123  0000                     _ANSELC	set	3898
   124  0000                     _CCPTMRS0bits	set	3913
   125  0000                     _TMR1	set	4046
   126  0000                     _RCONbits	set	4048
   127  0000                     _PORTAbits	set	3968
   128  0000                     _LATBbits	set	3978
   129  0000                     _LATAbits	set	3977
   130  0000                     _T1GCONbits	set	4044
   131  0000                     _T1CONbits	set	4045
   132  0000                     _T1CON	set	4045
   133  0000                     _TMR1L	set	4046
   134  0000                     _TMR1H	set	4047
   135  0000                     _T1GCON	set	4044
   136  0000                     _T0CON	set	4053
   137  0000                     _TMR0L	set	4054
   138  0000                     _TMR0H	set	4055
   139  0000                     _T0CONbits	set	4053
   140  0000                     _INTCONbits	set	4082
   141  0000                     _INTCON2bits	set	4081
   142  0000                     _WPUB	set	3937
   143  0000                     _TRISC	set	3988
   144  0000                     _TRISB	set	3987
   145  0000                     _TRISA	set	3986
   146  0000                     _LATC	set	3979
   147  0000                     _LATB	set	3978
   148  0000                     _LATA	set	3977
   149  0000                     _OSCTUNE	set	3995
   150  0000                     _OSCCON2	set	4050
   151  0000                     _OSCCON	set	4051
   152  0000                     _TXREG1	set	4013
   153  0000                     _RCREG1	set	4014
   154  0000                     _RCSTA1bits	set	4011
   155  0000                     _TXSTA1bits	set	4012
   156  0000                     _SPBRGH1	set	4016
   157  0000                     _SPBRG1	set	4015
   158  0000                     _TXSTA1	set	4012
   159  0000                     _RCSTA1	set	4011
   160  0000                     _BAUDCON1	set	4024
   161  0000                     _CCPR2L	set	3943
   162  0000                     _CCPR2H	set	3944
   163  0000                     _PSTR2CON	set	3939
   164  0000                     _PWM2CON	set	3941
   165  0000                     _ECCP2AS	set	3940
   166  0000                     _CCP2CON	set	3942
   167  0000                     _CCPR1L	set	4030
   168  0000                     _CCPR1H	set	4031
   169  0000                     _PSTR1CON	set	4025
   170  0000                     _PWM1CON	set	4023
   171  0000                     _ECCP1AS	set	4022
   172  0000                     _CCP1CON	set	4029
   173  0000                     _T2CONbits	set	4026
   174  0000                     _T2CON	set	4026
   175  0000                     _PIR1bits	set	3998
   176  0000                     _TMR2	set	4028
   177  0000                     _PR2	set	4027
   178                           
   179                           	psect	mediumconst
   180  00FE9E                     __pmediumconst:
   181                           	opt callstack 0
   182  00FE9E  00                 	db	0
   183  00FE9F                     STR_5:
   184  00FE9F  2D                 	db	45
   185  00FEA0  2D                 	db	45
   186  00FEA1  2D                 	db	45
   187  00FEA2  2D                 	db	45
   188  00FEA3  2D                 	db	45
   189  00FEA4  2D                 	db	45
   190  00FEA5  2D                 	db	45
   191  00FEA6  2D                 	db	45
   192  00FEA7  2D                 	db	45
   193  00FEA8  2D                 	db	45
   194  00FEA9  2D                 	db	45
   195  00FEAA  2D                 	db	45
   196  00FEAB  2D                 	db	45
   197  00FEAC  2D                 	db	45
   198  00FEAD  2D                 	db	45
   199  00FEAE  2D                 	db	45
   200  00FEAF  2D                 	db	45
   201  00FEB0  2D                 	db	45
   202  00FEB1  2D                 	db	45
   203  00FEB2  2D                 	db	45
   204  00FEB3  2D                 	db	45
   205  00FEB4  2D                 	db	45
   206  00FEB5  2D                 	db	45
   207  00FEB6  2D                 	db	45
   208  00FEB7  2D                 	db	45
   209  00FEB8  2D                 	db	45
   210  00FEB9  2D                 	db	45
   211  00FEBA  2D                 	db	45
   212  00FEBB  2D                 	db	45
   213  00FEBC  2D                 	db	45
   214  00FEBD  2D                 	db	45
   215  00FEBE  2D                 	db	45
   216  00FEBF  2D                 	db	45
   217  00FEC0  2D                 	db	45
   218  00FEC1  2D                 	db	45
   219  00FEC2  2D                 	db	45
   220  00FEC3  2D                 	db	45
   221  00FEC4  2D                 	db	45
   222  00FEC5  2D                 	db	45
   223  00FEC6  2D                 	db	45
   224  00FEC7  2D                 	db	45
   225  00FEC8  2D                 	db	45
   226  00FEC9  2D                 	db	45
   227  00FECA  2D                 	db	45
   228  00FECB  2D                 	db	45
   229  00FECC  2D                 	db	45
   230  00FECD  2D                 	db	45
   231  00FECE  2D                 	db	45
   232  00FECF  2D                 	db	45
   233  00FED0  0D                 	db	13
   234  00FED1  0A                 	db	10
   235  00FED2  00                 	db	0
   236  00FED3                     STR_18:
   237  00FED3  43                 	db	67	;'C'
   238  00FED4  75                 	db	117	;'u'
   239  00FED5  72                 	db	114	;'r'
   240  00FED6  72                 	db	114	;'r'
   241  00FED7  65                 	db	101	;'e'
   242  00FED8  6E                 	db	110	;'n'
   243  00FED9  74                 	db	116	;'t'
   244  00FEDA  20                 	db	32
   245  00FEDB  72                 	db	114	;'r'
   246  00FEDC  61                 	db	97	;'a'
   247  00FEDD  6E                 	db	110	;'n'
   248  00FEDE  67                 	db	103	;'g'
   249  00FEDF  65                 	db	101	;'e'
   250  00FEE0  66                 	db	102	;'f'
   251  00FEE1  69                 	db	105	;'i'
   252  00FEE2  6E                 	db	110	;'n'
   253  00FEE3  64                 	db	100	;'d'
   254  00FEE4  65                 	db	101	;'e'
   255  00FEE5  72                 	db	114	;'r'
   256  00FEE6  20                 	db	32
   257  00FEE7  76                 	db	118	;'v'
   258  00FEE8  61                 	db	97	;'a'
   259  00FEE9  6C                 	db	108	;'l'
   260  00FEEA  75                 	db	117	;'u'
   261  00FEEB  65                 	db	101	;'e'
   262  00FEEC  3A                 	db	58	;':'
   263  00FEED  20                 	db	32
   264  00FEEE  25                 	db	37
   265  00FEEF  75                 	db	117	;'u'
   266  00FEF0  0D                 	db	13
   267  00FEF1  0A                 	db	10
   268  00FEF2  00                 	db	0
   269  00FEF3                     STR_11:
   270  00FEF3  72                 	db	114	;'r'
   271  00FEF4  3A                 	db	58	;':'
   272  00FEF5  20                 	db	32
   273  00FEF6  52                 	db	82	;'R'
   274  00FEF7  65                 	db	101	;'e'
   275  00FEF8  61                 	db	97	;'a'
   276  00FEF9  64                 	db	100	;'d'
   277  00FEFA  20                 	db	32
   278  00FEFB  72                 	db	114	;'r'
   279  00FEFC  61                 	db	97	;'a'
   280  00FEFD  6E                 	db	110	;'n'
   281  00FEFE  67                 	db	103	;'g'
   282  00FEFF  65                 	db	101	;'e'
   283  00FF00  66                 	db	102	;'f'
   284  00FF01  69                 	db	105	;'i'
   285  00FF02  6E                 	db	110	;'n'
   286  00FF03  64                 	db	100	;'d'
   287  00FF04  65                 	db	101	;'e'
   288  00FF05  72                 	db	114	;'r'
   289  00FF06  20                 	db	32
   290  00FF07  76                 	db	118	;'v'
   291  00FF08  61                 	db	97	;'a'
   292  00FF09  6C                 	db	108	;'l'
   293  00FF0A  75                 	db	117	;'u'
   294  00FF0B  65                 	db	101	;'e'
   295  00FF0C  2E                 	db	46
   296  00FF0D  0D                 	db	13
   297  00FF0E  0A                 	db	10
   298  00FF0F  00                 	db	0
   299  00FF10                     STR_3:
   300  00FF10  4F                 	db	79	;'O'
   301  00FF11  62                 	db	98	;'b'
   302  00FF12  73                 	db	115	;'s'
   303  00FF13  74                 	db	116	;'t'
   304  00FF14  61                 	db	97	;'a'
   305  00FF15  63                 	db	99	;'c'
   306  00FF16  6C                 	db	108	;'l'
   307  00FF17  65                 	db	101	;'e'
   308  00FF18  2D                 	db	45
   309  00FF19  61                 	db	97	;'a'
   310  00FF1A  76                 	db	118	;'v'
   311  00FF1B  6F                 	db	111	;'o'
   312  00FF1C  69                 	db	105	;'i'
   313  00FF1D  64                 	db	100	;'d'
   314  00FF1E  69                 	db	105	;'i'
   315  00FF1F  6E                 	db	110	;'n'
   316  00FF20  67                 	db	103	;'g'
   317  00FF21  20                 	db	32
   318  00FF22  74                 	db	116	;'t'
   319  00FF23  61                 	db	97	;'a'
   320  00FF24  6E                 	db	110	;'n'
   321  00FF25  6B                 	db	107	;'k'
   322  00FF26  20                 	db	32
   323  00FF27  0D                 	db	13
   324  00FF28  0A                 	db	10
   325  00FF29  00                 	db	0
   326  00FF2A                     STR_2:
   327  00FF2A  46                 	db	70	;'F'
   328  00FF2B  69                 	db	105	;'i'
   329  00FF2C  6E                 	db	110	;'n'
   330  00FF2D  61                 	db	97	;'a'
   331  00FF2E  6C                 	db	108	;'l'
   332  00FF2F  20                 	db	32
   333  00FF30  70                 	db	112	;'p'
   334  00FF31  72                 	db	114	;'r'
   335  00FF32  6F                 	db	111	;'o'
   336  00FF33  6A                 	db	106	;'j'
   337  00FF34  65                 	db	101	;'e'
   338  00FF35  63                 	db	99	;'c'
   339  00FF36  74                 	db	116	;'t'
   340  00FF37  20                 	db	32
   341  00FF38  74                 	db	116	;'t'
   342  00FF39  65                 	db	101	;'e'
   343  00FF3A  72                 	db	114	;'r'
   344  00FF3B  6D                 	db	109	;'m'
   345  00FF3C  69                 	db	105	;'i'
   346  00FF3D  6E                 	db	110	;'n'
   347  00FF3E  61                 	db	97	;'a'
   348  00FF3F  6C                 	db	108	;'l'
   349  00FF40  20                 	db	32
   350  00FF41  0D                 	db	13
   351  00FF42  0A                 	db	10
   352  00FF43  00                 	db	0
   353  00FF44                     STR_9:
   354  00FF44  7A                 	db	122	;'z'
   355  00FF45  3A                 	db	58	;':'
   356  00FF46  20                 	db	32
   357  00FF47  43                 	db	67	;'C'
   358  00FF48  6C                 	db	108	;'l'
   359  00FF49  65                 	db	101	;'e'
   360  00FF4A  61                 	db	97	;'a'
   361  00FF4B  72                 	db	114	;'r'
   362  00FF4C  20                 	db	32
   363  00FF4D  74                 	db	116	;'t'
   364  00FF4E  68                 	db	104	;'h'
   365  00FF4F  65                 	db	101	;'e'
   366  00FF50  20                 	db	32
   367  00FF51  74                 	db	116	;'t'
   368  00FF52  65                 	db	101	;'e'
   369  00FF53  72                 	db	114	;'r'
   370  00FF54  6D                 	db	109	;'m'
   371  00FF55  69                 	db	105	;'i'
   372  00FF56  6E                 	db	110	;'n'
   373  00FF57  61                 	db	97	;'a'
   374  00FF58  6C                 	db	108	;'l'
   375  00FF59  2E                 	db	46
   376  00FF5A  0D                 	db	13
   377  00FF5B  0A                 	db	10
   378  00FF5C  00                 	db	0
   379  00FF5D                     STR_16:
   380  00FF5D  4D                 	db	77	;'M'
   381  00FF5E  6F                 	db	111	;'o'
   382  00FF5F  74                 	db	116	;'t'
   383  00FF60  6F                 	db	111	;'o'
   384  00FF61  72                 	db	114	;'r'
   385  00FF62  73                 	db	115	;'s'
   386  00FF63  20                 	db	32
   387  00FF64  74                 	db	116	;'t'
   388  00FF65  6F                 	db	111	;'o'
   389  00FF66  67                 	db	103	;'g'
   390  00FF67  67                 	db	103	;'g'
   391  00FF68  6C                 	db	108	;'l'
   392  00FF69  65                 	db	101	;'e'
   393  00FF6A  64                 	db	100	;'d'
   394  00FF6B  20                 	db	32
   395  00FF6C  6F                 	db	111	;'o'
   396  00FF6D  66                 	db	102	;'f'
   397  00FF6E  66                 	db	102	;'f'
   398  00FF6F  2E                 	db	46
   399  00FF70  0D                 	db	13
   400  00FF71  0A                 	db	10
   401  00FF72  00                 	db	0
   402  00FF73                     STR_8:
   403  00FF73  5A                 	db	90	;'Z'
   404  00FF74  3A                 	db	58	;':'
   405  00FF75  20                 	db	32
   406  00FF76  52                 	db	82	;'R'
   407  00FF77  65                 	db	101	;'e'
   408  00FF78  73                 	db	115	;'s'
   409  00FF79  65                 	db	101	;'e'
   410  00FF7A  74                 	db	116	;'t'
   411  00FF7B  20                 	db	32
   412  00FF7C  70                 	db	112	;'p'
   413  00FF7D  72                 	db	114	;'r'
   414  00FF7E  6F                 	db	111	;'o'
   415  00FF7F  63                 	db	99	;'c'
   416  00FF80  65                 	db	101	;'e'
   417  00FF81  73                 	db	115	;'s'
   418  00FF82  73                 	db	115	;'s'
   419  00FF83  6F                 	db	111	;'o'
   420  00FF84  72                 	db	114	;'r'
   421  00FF85  2E                 	db	46
   422  00FF86  0D                 	db	13
   423  00FF87  0A                 	db	10
   424  00FF88  00                 	db	0
   425  00FF89                     STR_17:
   426  00FF89  4D                 	db	77	;'M'
   427  00FF8A  6F                 	db	111	;'o'
   428  00FF8B  74                 	db	116	;'t'
   429  00FF8C  6F                 	db	111	;'o'
   430  00FF8D  72                 	db	114	;'r'
   431  00FF8E  73                 	db	115	;'s'
   432  00FF8F  20                 	db	32
   433  00FF90  74                 	db	116	;'t'
   434  00FF91  6F                 	db	111	;'o'
   435  00FF92  67                 	db	103	;'g'
   436  00FF93  67                 	db	103	;'g'
   437  00FF94  6C                 	db	108	;'l'
   438  00FF95  65                 	db	101	;'e'
   439  00FF96  64                 	db	100	;'d'
   440  00FF97  20                 	db	32
   441  00FF98  6F                 	db	111	;'o'
   442  00FF99  6E                 	db	110	;'n'
   443  00FF9A  2E                 	db	46
   444  00FF9B  0D                 	db	13
   445  00FF9C  0A                 	db	10
   446  00FF9D  00                 	db	0
   447  00FF9E                     STR_10:
   448  00FF9E  74                 	db	116	;'t'
   449  00FF9F  3A                 	db	58	;':'
   450  00FFA0  20                 	db	32
   451  00FFA1  54                 	db	84	;'T'
   452  00FFA2  6F                 	db	111	;'o'
   453  00FFA3  67                 	db	103	;'g'
   454  00FFA4  67                 	db	103	;'g'
   455  00FFA5  6C                 	db	108	;'l'
   456  00FFA6  65                 	db	101	;'e'
   457  00FFA7  20                 	db	32
   458  00FFA8  6D                 	db	109	;'m'
   459  00FFA9  6F                 	db	111	;'o'
   460  00FFAA  74                 	db	116	;'t'
   461  00FFAB  6F                 	db	111	;'o'
   462  00FFAC  72                 	db	114	;'r'
   463  00FFAD  73                 	db	115	;'s'
   464  00FFAE  2E                 	db	46
   465  00FFAF  0D                 	db	13
   466  00FFB0  0A                 	db	10
   467  00FFB1  00                 	db	0
   468  00FFB2                     STR_1:
   469  00FFB2  44                 	db	68	;'D'
   470  00FFB3  65                 	db	101	;'e'
   471  00FFB4  76                 	db	118	;'v'
   472  00FFB5  65                 	db	101	;'e'
   473  00FFB6  6C                 	db	108	;'l'
   474  00FFB7  6F                 	db	111	;'o'
   475  00FFB8  70                 	db	112	;'p'
   476  00FFB9  6D                 	db	109	;'m'
   477  00FFBA  65                 	db	101	;'e'
   478  00FFBB  6E                 	db	110	;'n'
   479  00FFBC  74                 	db	116	;'t'
   480  00FFBD  20                 	db	32
   481  00FFBE  42                 	db	66	;'B'
   482  00FFBF  6F                 	db	111	;'o'
   483  00FFC0  61                 	db	97	;'a'
   484  00FFC1  72                 	db	114	;'r'
   485  00FFC2  64                 	db	100	;'d'
   486  00FFC3  0D                 	db	13
   487  00FFC4  0A                 	db	10
   488  00FFC5  00                 	db	0
   489  00FFC6                     STR_19:
   490  00FFC6  55                 	db	85	;'U'
   491  00FFC7  6E                 	db	110	;'n'
   492  00FFC8  6B                 	db	107	;'k'
   493  00FFC9  6E                 	db	110	;'n'
   494  00FFCA  6F                 	db	111	;'o'
   495  00FFCB  77                 	db	119	;'w'
   496  00FFCC  6E                 	db	110	;'n'
   497  00FFCD  20                 	db	32
   498  00FFCE  6B                 	db	107	;'k'
   499  00FFCF  65                 	db	101	;'e'
   500  00FFD0  79                 	db	121	;'y'
   501  00FFD1  20                 	db	32
   502  00FFD2  25                 	db	37
   503  00FFD3  63                 	db	99	;'c'
   504  00FFD4  0D                 	db	13
   505  00FFD5  0A                 	db	10
   506  00FFD6  00                 	db	0
   507  00FFD7                     STR_6:
   508  00FFD7  3F                 	db	63	;'?'
   509  00FFD8  3A                 	db	58	;':'
   510  00FFD9  20                 	db	32
   511  00FFDA  68                 	db	104	;'h'
   512  00FFDB  65                 	db	101	;'e'
   513  00FFDC  6C                 	db	108	;'l'
   514  00FFDD  70                 	db	112	;'p'
   515  00FFDE  20                 	db	32
   516  00FFDF  6D                 	db	109	;'m'
   517  00FFE0  65                 	db	101	;'e'
   518  00FFE1  6E                 	db	110	;'n'
   519  00FFE2  75                 	db	117	;'u'
   520  00FFE3  0D                 	db	13
   521  00FFE4  0A                 	db	10
   522  00FFE5  00                 	db	0
   523  00FFE6                     STR_13:
   524  00FFE6  6F                 	db	111	;'o'
   525  00FFE7  3A                 	db	58	;':'
   526  00FFE8  20                 	db	32
   527  00FFE9  20                 	db	32
   528  00FFEA  20                 	db	32
   529  00FFEB  20                 	db	32
   530  00FFEC  20                 	db	32
   531  00FFED  20                 	db	32
   532  00FFEE  6F                 	db	111	;'o'
   533  00FFEF  6B                 	db	107	;'k'
   534  00FFF0  0D                 	db	13
   535  00FFF1  0A                 	db	10
   536  00FFF2  00                 	db	0
   537  00FFF3                     STR_7:
   538  00FFF3  6F                 	db	111	;'o'
   539  00FFF4  3A                 	db	58	;':'
   540  00FFF5  20                 	db	32
   541  00FFF6  6B                 	db	107	;'k'
   542  00FFF7  0D                 	db	13
   543  00FFF8  0A                 	db	10
   544  00FFF9  00                 	db	0
   545  00FFFA                     STR_4:
   546  00FFFA  0D                 	db	13
   547  00FFFB  0A                 	db	10
   548  00FFFC  3E                 	db	62	;'>'
   549  00FFFD  20                 	db	32
   550  00FFFE  00                 	db	0
   551  0000                     
   552                           ; #config settings
   553  00FFFF  00                 	db	0	; dummy byte at the end
   554  0000                     
   555                           	psect	cinit
   556  000D78                     __pcinit:
   557                           	opt callstack 0
   558  000D78                     start_initialization:
   559                           	opt callstack 0
   560  000D78                     __initialization:
   561                           	opt callstack 0
   562                           
   563                           ; Clear objects allocated to BANK0 (42 bytes)
   564  000D78  EE00  F060         	lfsr	0,__pbssBANK0
   565  000D7C  0E2A               	movlw	42
   566  000D7E                     clear_0:
   567  000D7E  6AEE               	clrf	postinc0,c
   568  000D80  06E8               	decf	wreg,f,c
   569  000D82  E1FD               	bnz	clear_0
   570                           
   571                           ; Clear objects allocated to COMRAM (4 bytes)
   572  000D84  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   573  000D86  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   574  000D88  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   575  000D8A  6A52               	clrf	__pbssCOMRAM& (0+255),c
   576  000D8C                     end_of_initialization:
   577                           	opt callstack 0
   578  000D8C                     __end_of__initialization:
   579                           	opt callstack 0
   580  000D8C  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   581  000D8E  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   582  000D90  0100               	movlb	0
   583  000D92  EF21  F000         	goto	_main	;jump to C main() function
   584                           
   585                           	psect	bssCOMRAM
   586  000052                     __pbssCOMRAM:
   587                           	opt callstack 0
   588  000052                     _width:
   589                           	opt callstack 0
   590  000052                     	ds	2
   591  000054                     _TMR0ISRstate:
   592                           	opt callstack 0
   593  000054                     	ds	1
   594  000055                     _eusart1RxLastError:
   595                           	opt callstack 0
   596  000055                     	ds	1
   597                           
   598                           	psect	bssBANK0
   599  000060                     __pbssBANK0:
   600                           	opt callstack 0
   601  000060                     _nout:
   602                           	opt callstack 0
   603  000060                     	ds	2
   604  000062                     _prec:
   605                           	opt callstack 0
   606  000062                     	ds	2
   607  000064                     _flags:
   608                           	opt callstack 0
   609  000064                     	ds	2
   610  000066                     _distance:
   611                           	opt callstack 0
   612  000066                     	ds	2
   613  000068                     _microSecondDelay:
   614                           	opt callstack 0
   615  000068                     	ds	2
   616  00006A                     _dbuf:
   617                           	opt callstack 0
   618  00006A                     	ds	32
   619                           
   620                           	psect	cstackBANK0
   621  00008A                     __pcstackBANK0:
   622                           	opt callstack 0
   623  00008A                     vfpfcnvrt@llu:
   624                           	opt callstack 0
   625                           
   626                           ; 8 bytes @ 0x0
   627  00008A                     	ds	8
   628  000092                     vfpfcnvrt@c:
   629                           	opt callstack 0
   630                           
   631                           ; 1 bytes @ 0x8
   632  000092                     	ds	1
   633  000093                     ?_vfprintf:
   634                           	opt callstack 0
   635  000093                     vfprintf@fp:
   636                           	opt callstack 0
   637                           
   638                           ; 2 bytes @ 0x9
   639  000093                     	ds	2
   640  000095                     vfprintf@fmt:
   641                           	opt callstack 0
   642                           
   643                           ; 2 bytes @ 0xB
   644  000095                     	ds	2
   645  000097                     vfprintf@ap:
   646                           	opt callstack 0
   647                           
   648                           ; 2 bytes @ 0xD
   649  000097                     	ds	2
   650  000099                     ?_printf:
   651                           	opt callstack 0
   652  000099                     printf@fmt:
   653                           	opt callstack 0
   654                           
   655                           ; 2 bytes @ 0xF
   656  000099                     	ds	6
   657  00009F                     printf@ap:
   658                           	opt callstack 0
   659                           
   660                           ; 2 bytes @ 0x15
   661  00009F                     	ds	2
   662  0000A1                     main@motorsToggled:
   663                           	opt callstack 0
   664                           
   665                           ; 1 bytes @ 0x17
   666  0000A1                     	ds	1
   667  0000A2                     main@cmd:
   668                           	opt callstack 0
   669                           
   670                           ; 1 bytes @ 0x18
   671  0000A2                     	ds	1
   672  0000A3                     main@i:
   673                           	opt callstack 0
   674                           
   675                           ; 1 bytes @ 0x19
   676  0000A3                     	ds	1
   677                           
   678                           	psect	cstackCOMRAM
   679  000001                     __pcstackCOMRAM:
   680                           	opt callstack 0
   681  000001                     TMR0_WriteTimer@timerVal:
   682                           	opt callstack 0
   683                           
   684                           ; 2 bytes @ 0x0
   685  000001                     	ds	2
   686  000003                     ??_myTMR0ISR:
   687  000003                     
   688                           ; 1 bytes @ 0x2
   689  000003                     	ds	2
   690  000005                     ??_INTERRUPT_InterruptManager:
   691                           
   692                           ; 1 bytes @ 0x4
   693  000005                     	ds	2
   694  000007                     ?_strlen:
   695                           	opt callstack 0
   696  000007                     ?___lodiv:
   697                           	opt callstack 0
   698  000007                     ?___lomod:
   699                           	opt callstack 0
   700  000007                     EUSART1_Write@txData:
   701                           	opt callstack 0
   702  000007                     EPWM1_LoadDutyValue@dutyValue:
   703                           	opt callstack 0
   704  000007                     EPWM2_LoadDutyValue@dutyValue:
   705                           	opt callstack 0
   706  000007                     EUSART1_SetFramingErrorHandler@interruptHandler:
   707                           	opt callstack 0
   708  000007                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   709                           	opt callstack 0
   710  000007                     EUSART1_SetErrorHandler@interruptHandler:
   711                           	opt callstack 0
   712  000007                     TMR0_SetInterruptHandler@InterruptHandler:
   713                           	opt callstack 0
   714  000007                     strlen@s:
   715                           	opt callstack 0
   716  000007                     ___lodiv@dividend:
   717                           	opt callstack 0
   718  000007                     ___lomod@dividend:
   719                           	opt callstack 0
   720                           
   721                           ; 8 bytes @ 0x6
   722  000007                     	ds	1
   723  000008                     putch@txData:
   724                           	opt callstack 0
   725                           
   726                           ; 1 bytes @ 0x7
   727  000008                     	ds	1
   728  000009                     ??_TMR0_Initialize:
   729  000009                     ??_EPWM1_LoadDutyValue:
   730  000009                     ??_EPWM2_LoadDutyValue:
   731  000009                     fputc@c:
   732                           	opt callstack 0
   733  000009                     strlen@a:
   734                           	opt callstack 0
   735                           
   736                           ; 2 bytes @ 0x8
   737  000009                     	ds	2
   738  00000B                     fputc@fp:
   739                           	opt callstack 0
   740                           
   741                           ; 2 bytes @ 0xA
   742  00000B                     	ds	2
   743  00000D                     ??_fputc:
   744                           
   745                           ; 1 bytes @ 0xC
   746  00000D                     	ds	2
   747  00000F                     ___lodiv@divisor:
   748                           	opt callstack 0
   749  00000F                     ___lomod@divisor:
   750                           	opt callstack 0
   751                           
   752                           ; 8 bytes @ 0xE
   753  00000F                     	ds	3
   754  000012                     fputs@s:
   755                           	opt callstack 0
   756                           
   757                           ; 2 bytes @ 0x11
   758  000012                     	ds	2
   759  000014                     fputs@fp:
   760                           	opt callstack 0
   761                           
   762                           ; 2 bytes @ 0x13
   763  000014                     	ds	2
   764  000016                     fputs@c:
   765                           	opt callstack 0
   766                           
   767                           ; 1 bytes @ 0x15
   768  000016                     	ds	1
   769  000017                     ___lomod@counter:
   770                           	opt callstack 0
   771  000017                     fputs@i:
   772                           	opt callstack 0
   773  000017                     ___lodiv@quotient:
   774                           	opt callstack 0
   775                           
   776                           ; 8 bytes @ 0x16
   777  000017                     	ds	2
   778  000019                     ?_pad:
   779                           	opt callstack 0
   780  000019                     pad@fp:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0x18
   784  000019                     	ds	2
   785  00001B                     pad@buf:
   786                           	opt callstack 0
   787                           
   788                           ; 2 bytes @ 0x1A
   789  00001B                     	ds	2
   790  00001D                     pad@p:
   791                           	opt callstack 0
   792                           
   793                           ; 2 bytes @ 0x1C
   794  00001D                     	ds	2
   795  00001F                     ??_pad:
   796  00001F                     ___lodiv@counter:
   797                           	opt callstack 0
   798                           
   799                           ; 1 bytes @ 0x1E
   800  00001F                     	ds	1
   801  000020                     pad@i:
   802                           	opt callstack 0
   803                           
   804                           ; 2 bytes @ 0x1F
   805  000020                     	ds	2
   806  000022                     pad@w:
   807                           	opt callstack 0
   808                           
   809                           ; 2 bytes @ 0x21
   810  000022                     	ds	2
   811  000024                     ?_ctoa:
   812                           	opt callstack 0
   813  000024                     ?_utoa:
   814                           	opt callstack 0
   815  000024                     ctoa@fp:
   816                           	opt callstack 0
   817  000024                     utoa@fp:
   818                           	opt callstack 0
   819                           
   820                           ; 2 bytes @ 0x23
   821  000024                     	ds	2
   822  000026                     ctoa@c:
   823                           	opt callstack 0
   824  000026                     utoa@d:
   825                           	opt callstack 0
   826                           
   827                           ; 8 bytes @ 0x25
   828  000026                     	ds	1
   829  000027                     ctoa@w:
   830                           	opt callstack 0
   831                           
   832                           ; 2 bytes @ 0x26
   833  000027                     	ds	7
   834  00002E                     ??_utoa:
   835                           
   836                           ; 1 bytes @ 0x2D
   837  00002E                     	ds	8
   838  000036                     utoa@p:
   839                           	opt callstack 0
   840                           
   841                           ; 2 bytes @ 0x35
   842  000036                     	ds	2
   843  000038                     utoa@w:
   844                           	opt callstack 0
   845                           
   846                           ; 2 bytes @ 0x37
   847  000038                     	ds	2
   848  00003A                     utoa@n:
   849                           	opt callstack 0
   850                           
   851                           ; 8 bytes @ 0x39
   852  00003A                     	ds	8
   853  000042                     utoa@i:
   854                           	opt callstack 0
   855                           
   856                           ; 2 bytes @ 0x41
   857  000042                     	ds	2
   858  000044                     ?_vfpfcnvrt:
   859                           	opt callstack 0
   860  000044                     vfpfcnvrt@fp:
   861                           	opt callstack 0
   862                           
   863                           ; 2 bytes @ 0x43
   864  000044                     	ds	2
   865  000046                     vfpfcnvrt@fmt:
   866                           	opt callstack 0
   867                           
   868                           ; 2 bytes @ 0x45
   869  000046                     	ds	2
   870  000048                     vfpfcnvrt@ap:
   871                           	opt callstack 0
   872                           
   873                           ; 2 bytes @ 0x47
   874  000048                     	ds	2
   875  00004A                     ??_vfpfcnvrt:
   876                           
   877                           ; 1 bytes @ 0x49
   878  00004A                     	ds	4
   879  00004E                     vfprintf@cfmt:
   880                           	opt callstack 0
   881                           
   882                           ; 2 bytes @ 0x4D
   883  00004E                     	ds	2
   884  000050                     ??_main:
   885                           
   886                           ; 1 bytes @ 0x4F
   887  000050                     	ds	2
   888                           
   889 ;;
   890 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   891 ;;
   892 ;; *************** function _main *****************
   893 ;; Defined at:
   894 ;;		line 38 in file "main.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;  i               1   25[BANK0 ] unsigned char 
   899 ;;  cmd             1   24[BANK0 ] unsigned char 
   900 ;;  motorsToggle    1   23[BANK0 ] unsigned char 
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;Total ram usage:        5 bytes
   915 ;; Hardware stack levels required when called:   13
   916 ;; This function calls:
   917 ;;		_EPWM1_LoadDutyValue
   918 ;;		_EPWM2_LoadDutyValue
   919 ;;		_EUSART1_Read
   920 ;;		_EUSART1_is_rx_ready
   921 ;;		_SYSTEM_Initialize
   922 ;;		_TMR0_SetInterruptHandler
   923 ;;		_printf
   924 ;; This function is called by:
   925 ;;		Startup code after reset
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text0
   930  000042                     __ptext0:
   931                           	opt callstack 0
   932  000042                     _main:
   933                           	opt callstack 18
   934  000042                     
   935                           ;main.c: 39: ;main.c: 40: ;main.c: 41: 
   936  000042  0E00               	movlw	0
   937  000044  0100               	movlb	0	; () banked
   938  000046  6FA1               	movwf	main@motorsToggled& (0+255),b
   939  000048                     
   940                           ; BSR set to: 0
   941                           ;main.c: 43:     printf("-------------------------------------------------\r\n");
   942  000048  EC89  F006         	call	_SYSTEM_Initialize	;wreg free
   943  00004C  9089               	bcf	137,0,c	;volatile
   944  00004E                     
   945                           ;main.c: 46:                 printf("Z: Reset processor.\r\n");
   946  00004E  0E00               	movlw	0
   947  000050  6E08               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
   948  000052  6807               	setf	EPWM1_LoadDutyValue@dutyValue^0,c
   949  000054  EC32  F006         	call	_EPWM1_LoadDutyValue	;wreg free
   950  000058                     
   951                           ;main.c: 47:                 printf("z: Clear the terminal.\r\n");
   952  000058  0E00               	movlw	0
   953  00005A  6E08               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
   954  00005C  6807               	setf	EPWM2_LoadDutyValue@dutyValue^0,c
   955  00005E  EC1A  F006         	call	_EPWM2_LoadDutyValue	;wreg free
   956  000062                     
   957                           ;main.c: 49:                 printf("r: Read rangefinder value.\r\n");
   958  000062  0EB2               	movlw	low STR_1
   959  000064  0100               	movlb	0	; () banked
   960  000066  6F99               	movwf	printf@fmt& (0+255),b
   961  000068  0EFF               	movlw	high STR_1
   962  00006A  6F9A               	movwf	(printf@fmt+1)& (0+255),b
   963  00006C  EC61  F006         	call	_printf	;wreg free
   964  000070                     
   965                           ;main.c: 50:                 printf("-------------------------------------------------\r
      +                          \n");
   966  000070  0E2A               	movlw	low STR_2
   967  000072  0100               	movlb	0	; () banked
   968  000074  6F99               	movwf	printf@fmt& (0+255),b
   969  000076  0EFF               	movlw	high STR_2
   970  000078  6F9A               	movwf	(printf@fmt+1)& (0+255),b
   971  00007A  EC61  F006         	call	_printf	;wreg free
   972  00007E                     
   973                           ;main.c: 51:     break;
   974  00007E  0E10               	movlw	low STR_3
   975  000080  0100               	movlb	0	; () banked
   976  000082  6F99               	movwf	printf@fmt& (0+255),b
   977  000084  0EFF               	movlw	high STR_3
   978  000086  6F9A               	movwf	(printf@fmt+1)& (0+255),b
   979  000088  EC61  F006         	call	_printf	;wreg free
   980  00008C                     
   981                           ;main.c: 52: 
   982  00008C  0EFA               	movlw	low STR_4
   983  00008E  0100               	movlb	0	; () banked
   984  000090  6F99               	movwf	printf@fmt& (0+255),b
   985  000092  0EFF               	movlw	high STR_4
   986  000094  6F9A               	movwf	(printf@fmt+1)& (0+255),b
   987  000096  EC61  F006         	call	_printf	;wreg free
   988  00009A                     
   989                           ;main.c: 54: 
   990  00009A  0E0E               	movlw	low _myTMR0ISR
   991  00009C  6E07               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   992  00009E  0E09               	movlw	high _myTMR0ISR
   993  0000A0  6E08               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   994  0000A2  EC02  F007         	call	_TMR0_SetInterruptHandler	;wreg free
   995  0000A6                     
   996                           ;main.c: 55: 
   997  0000A6  8CF2               	bsf	242,6,c	;volatile
   998  0000A8                     
   999                           ;main.c: 56:             case 'o':
  1000  0000A8  8EF2               	bsf	242,7,c	;volatile
  1001  0000AA                     l2499:
  1002                           
  1003                           ;main.c: 59: 
  1004  0000AA  ECE4  F006         	call	_EUSART1_is_rx_ready	;wreg free
  1005  0000AE  0900               	iorlw	0
  1006  0000B0  B4D8               	btfsc	status,2,c
  1007  0000B2  EF5D  F000         	goto	u1261
  1008  0000B6  EF5F  F000         	goto	u1260
  1009  0000BA                     u1261:
  1010  0000BA  EF55  F000         	goto	l2499
  1011  0000BE                     u1260:
  1012  0000BE                     
  1013                           ;main.c: 60: 
  1014  0000BE  EC75  F006         	call	_EUSART1_Read	;wreg free
  1015  0000C2  0100               	movlb	0	; () banked
  1016  0000C4  6FA2               	movwf	main@cmd& (0+255),b
  1017                           
  1018                           ;main.c: 61: 
  1019  0000C6  EF15  F001         	goto	l2563
  1020  0000CA                     l2503:
  1021                           
  1022                           ; BSR set to: 0
  1023                           ;main.c: 67: 
  1024  0000CA  0E9F               	movlw	low STR_5
  1025  0000CC  6F99               	movwf	printf@fmt& (0+255),b
  1026  0000CE  0EFE               	movlw	high STR_5
  1027  0000D0  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  1028  0000D2  EC61  F006         	call	_printf	;wreg free
  1029                           
  1030                           ;main.c: 68: 
  1031  0000D6  0ED7               	movlw	low STR_6
  1032  0000D8  0100               	movlb	0	; () banked
  1033  0000DA  6F99               	movwf	printf@fmt& (0+255),b
  1034  0000DC  0EFF               	movlw	high STR_6
  1035  0000DE  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  1036  0000E0  EC61  F006         	call	_printf	;wreg free
  1037                           
  1038                           ;main.c: 69: 
  1039  0000E4  0EF3               	movlw	low STR_7
  1040  0000E6  0100               	movlb	0	; () banked
  1041  0000E8  6F99               	movwf	printf@fmt& (0+255),b
  1042  0000EA  0EFF               	movlw	high STR_7
  1043  0000EC  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  1044  0000EE  EC61  F006         	call	_printf	;wreg free
  1045                           
  1046                           ;main.c: 70: 
  1047  0000F2  0E73               	movlw	low STR_8
  1048  0000F4  0100               	movlb	0	; () banked
  1049  0000F6  6F99               	movwf	printf@fmt& (0+255),b
  1050  0000F8  0EFF               	movlw	high STR_8
  1051  0000FA  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  1052  0000FC  EC61  F006         	call	_printf	;wreg free
  1053                           
  1054                           ;main.c: 71:             case 'z':
  1055  000100  0E44               	movlw	low STR_9
  1056  000102  0100               	movlb	0	; () banked
  1057  000104  6F99               	movwf	printf@fmt& (0+255),b
  1058  000106  0EFF               	movlw	high STR_9
  1059  000108  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  1060  00010A  EC61  F006         	call	_printf	;wreg free
  1061                           
  1062                           ;main.c: 72:                 for (i=0; i<40; i++) printf("\n");
  1063  00010E  0E9E               	movlw	low STR_10
  1064  000110  0100               	movlb	0	; () banked
  1065  000112  6F99               	movwf	printf@fmt& (0+255),b
  1066  000114  0EFF               	movlw	high STR_10
  1067  000116  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  1068  000118  EC61  F006         	call	_printf	;wreg free
  1069                           
  1070                           ;main.c: 73:                 break;
  1071  00011C  0EF3               	movlw	low STR_11
  1072  00011E  0100               	movlb	0	; () banked
  1073  000120  6F99               	movwf	printf@fmt& (0+255),b
  1074  000122  0EFE               	movlw	high STR_11
  1075  000124  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  1076  000126  EC61  F006         	call	_printf	;wreg free
  1077                           
  1078                           ;main.c: 74: 
  1079  00012A  0E9F               	movlw	low STR_5
  1080  00012C  0100               	movlb	0	; () banked
  1081  00012E  6F99               	movwf	printf@fmt& (0+255),b
  1082  000130  0EFE               	movlw	high STR_5
  1083  000132  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  1084  000134  EC61  F006         	call	_printf	;wreg free
  1085                           
  1086                           ;main.c: 75:             case 't':
  1087  000138  EF55  F000         	goto	l2499
  1088  00013C                     l2505:
  1089                           
  1090                           ; BSR set to: 0
  1091                           ;main.c: 81:                     motorsToggled = 1;
  1092  00013C  0EE6               	movlw	low STR_13
  1093  00013E  6F99               	movwf	printf@fmt& (0+255),b
  1094  000140  0EFF               	movlw	high STR_13
  1095  000142  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  1096  000144  EC61  F006         	call	_printf	;wreg free
  1097                           
  1098                           ;main.c: 82:                     do { LATBbits.LATB6 = 1; } while(0);
  1099  000148  EF55  F000         	goto	l2499
  1100  00014C                     l2507:
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;main.c: 88:                     EPWM2_LoadDutyValue(128);
  1104  00014C  0E00               	movlw	0
  1105  00014E  6FA3               	movwf	main@i& (0+255),b
  1106  000150                     l2513:
  1107                           
  1108                           ; BSR set to: 0
  1109  000150  0E28               	movlw	low (STR_3+24)
  1110  000152  6F99               	movwf	printf@fmt& (0+255),b
  1111  000154  0EFF               	movlw	high (STR_3+24)
  1112  000156  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  1113  000158  EC61  F006         	call	_printf	;wreg free
  1114  00015C  0100               	movlb	0	; () banked
  1115  00015E  2BA3               	incf	main@i& (0+255),f,b
  1116  000160                     
  1117                           ; BSR set to: 0
  1118  000160  0E27               	movlw	39
  1119  000162  65A3               	cpfsgt	main@i& (0+255),b
  1120  000164  EFB6  F000         	goto	u1271
  1121  000168  EFB8  F000         	goto	u1270
  1122  00016C                     u1271:
  1123  00016C  EFA8  F000         	goto	l2513
  1124  000170                     u1270:
  1125  000170                     
  1126                           ; BSR set to: 0
  1127  000170  00FF               	reset		;# 
  1128                           
  1129                           ;main.c: 90:                 }
  1130  000172  EF55  F000         	goto	l2499
  1131  000176                     l2519:
  1132                           
  1133                           ; BSR set to: 0
  1134                           ;main.c: 96:                 break;
  1135  000176  0E00               	movlw	0
  1136  000178  6FA3               	movwf	main@i& (0+255),b
  1137  00017A                     l2525:
  1138                           
  1139                           ; BSR set to: 0
  1140  00017A  0E28               	movlw	low (STR_3+24)
  1141  00017C  6F99               	movwf	printf@fmt& (0+255),b
  1142  00017E  0EFF               	movlw	high (STR_3+24)
  1143  000180  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  1144  000182  EC61  F006         	call	_printf	;wreg free
  1145  000186  0100               	movlb	0	; () banked
  1146  000188  2BA3               	incf	main@i& (0+255),f,b
  1147  00018A                     
  1148                           ; BSR set to: 0
  1149  00018A  0E27               	movlw	39
  1150  00018C  65A3               	cpfsgt	main@i& (0+255),b
  1151  00018E  EFCB  F000         	goto	u1281
  1152  000192  EFCD  F000         	goto	u1280
  1153  000196                     u1281:
  1154  000196  EFBD  F000         	goto	l2525
  1155  00019A                     u1280:
  1156  00019A  EF55  F000         	goto	l2499
  1157  00019E                     l2531:
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;main.c: 100: 
  1161  00019E  51A1               	movf	main@motorsToggled& (0+255),w,b
  1162  0001A0  B4D8               	btfsc	status,2,c
  1163  0001A2  EFD5  F000         	goto	u1291
  1164  0001A6  EFD7  F000         	goto	u1290
  1165  0001AA                     u1291:
  1166  0001AA  EFE2  F000         	goto	l2539
  1167  0001AE                     u1290:
  1168  0001AE                     
  1169                           ; BSR set to: 0
  1170                           ;main.c: 101:    default:
  1171  0001AE  0E00               	movlw	0
  1172  0001B0  6FA1               	movwf	main@motorsToggled& (0+255),b
  1173  0001B2                     
  1174                           ; BSR set to: 0
  1175  0001B2  9089               	bcf	137,0,c	;volatile
  1176  0001B4                     
  1177                           ; BSR set to: 0
  1178                           ;main.c: 103:     break;
  1179  0001B4  0E5D               	movlw	low STR_16
  1180  0001B6  6F99               	movwf	printf@fmt& (0+255),b
  1181  0001B8  0EFF               	movlw	high STR_16
  1182  0001BA  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  1183  0001BC  EC61  F006         	call	_printf	;wreg free
  1184                           
  1185                           ;main.c: 104:    }
  1186  0001C0  EF55  F000         	goto	l2499
  1187  0001C4                     l2539:
  1188                           
  1189                           ; BSR set to: 0
  1190                           ;main.c: 105: 
  1191  0001C4  0E01               	movlw	1
  1192  0001C6  6FA1               	movwf	main@motorsToggled& (0+255),b
  1193  0001C8                     
  1194                           ; BSR set to: 0
  1195  0001C8  8C8A               	bsf	138,6,c	;volatile
  1196  0001CA                     
  1197                           ; BSR set to: 0
  1198  0001CA  9E8A               	bcf	138,7,c	;volatile
  1199  0001CC                     
  1200                           ; BSR set to: 0
  1201  0001CC  8A8A               	bsf	138,5,c	;volatile
  1202  0001CE                     
  1203                           ; BSR set to: 0
  1204  0001CE  9289               	bcf	137,1,c	;volatile
  1205  0001D0                     
  1206                           ; BSR set to: 0
  1207  0001D0  8089               	bsf	137,0,c	;volatile
  1208  0001D2                     
  1209                           ; BSR set to: 0
  1210                           ;main.c: 111: 
  1211  0001D2  0E00               	movlw	0
  1212  0001D4  6E08               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  1213  0001D6  0E80               	movlw	128
  1214  0001D8  6E07               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  1215  0001DA  EC32  F006         	call	_EPWM1_LoadDutyValue	;wreg free
  1216  0001DE                     
  1217                           ;main.c: 112:     switch(TMR0ISRstate) {
  1218  0001DE  0E00               	movlw	0
  1219  0001E0  6E08               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  1220  0001E2  0E80               	movlw	128
  1221  0001E4  6E07               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  1222  0001E6  EC1A  F006         	call	_EPWM2_LoadDutyValue	;wreg free
  1223  0001EA                     
  1224                           ;main.c: 113: 
  1225  0001EA  0E89               	movlw	low STR_17
  1226  0001EC  0100               	movlb	0	; () banked
  1227  0001EE  6F99               	movwf	printf@fmt& (0+255),b
  1228  0001F0  0EFF               	movlw	high STR_17
  1229  0001F2  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  1230  0001F4  EC61  F006         	call	_printf	;wreg free
  1231  0001F8  EF55  F000         	goto	l2499
  1232  0001FC                     l2557:
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;main.c: 119: 
  1236  0001FC  0ED3               	movlw	low STR_18
  1237  0001FE  6F99               	movwf	printf@fmt& (0+255),b
  1238  000200  0EFE               	movlw	high STR_18
  1239  000202  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  1240  000204  C066  F09B         	movff	_distance,?_printf+2
  1241  000208  C067  F09C         	movff	_distance+1,?_printf+3
  1242  00020C  EC61  F006         	call	_printf	;wreg free
  1243                           
  1244                           ;main.c: 120:         case WAIT_ON_ECHO:
  1245  000210  EF55  F000         	goto	l2499
  1246  000214                     l2559:
  1247                           
  1248                           ; BSR set to: 0
  1249                           ;main.c: 126:             TMR0_WriteTimer(0x10000 - 10);
  1250  000214  0EC6               	movlw	low STR_19
  1251  000216  6F99               	movwf	printf@fmt& (0+255),b
  1252  000218  0EFF               	movlw	high STR_19
  1253  00021A  6F9A               	movwf	(printf@fmt+1)& (0+255),b
  1254  00021C  C0A2  F09B         	movff	main@cmd,?_printf+2
  1255  000220  6B9C               	clrf	(?_printf+3)& (0+255),b
  1256  000222  EC61  F006         	call	_printf	;wreg free
  1257                           
  1258                           ;main.c: 127:             break;
  1259  000226  EF55  F000         	goto	l2499
  1260  00022A                     l2563:
  1261                           
  1262                           ; BSR set to: 0
  1263  00022A  51A2               	movf	main@cmd& (0+255),w,b
  1264  00022C  6E50               	movwf	??_main^0,c
  1265  00022E  6A51               	clrf	(??_main+1)^0,c
  1266                           
  1267                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1268                           ; Switch size 1, requested type "simple"
  1269                           ; Number of cases is 1, Range of values is 0 to 0
  1270                           ; switch strategies available:
  1271                           ; Name         Instructions Cycles
  1272                           ; simple_byte            4     3 (average)
  1273                           ;	Chosen strategy is simple_byte
  1274  000230  5051               	movf	(??_main+1)^0,w,c
  1275  000232  0A00               	xorlw	0	; case 0
  1276  000234  B4D8               	btfsc	status,2,c
  1277  000236  EF1F  F001         	goto	l2609
  1278  00023A  EF0A  F001         	goto	l2559
  1279  00023E                     l2609:
  1280                           
  1281                           ; BSR set to: 0
  1282                           ; Switch size 1, requested type "simple"
  1283                           ; Number of cases is 6, Range of values is 63 to 122
  1284                           ; switch strategies available:
  1285                           ; Name         Instructions Cycles
  1286                           ; simple_byte           19    10 (average)
  1287                           ;	Chosen strategy is simple_byte
  1288  00023E  5050               	movf	??_main^0,w,c
  1289  000240  0A3F               	xorlw	63	; case 63
  1290  000242  B4D8               	btfsc	status,2,c
  1291  000244  EF65  F000         	goto	l2503
  1292  000248  0A65               	xorlw	101	; case 90
  1293  00024A  B4D8               	btfsc	status,2,c
  1294  00024C  EFA6  F000         	goto	l2507
  1295  000250  0A35               	xorlw	53	; case 111
  1296  000252  B4D8               	btfsc	status,2,c
  1297  000254  EF9E  F000         	goto	l2505
  1298  000258  0A1D               	xorlw	29	; case 114
  1299  00025A  B4D8               	btfsc	status,2,c
  1300  00025C  EFFE  F000         	goto	l2557
  1301  000260  0A06               	xorlw	6	; case 116
  1302  000262  B4D8               	btfsc	status,2,c
  1303  000264  EFCF  F000         	goto	l2531
  1304  000268  0A0E               	xorlw	14	; case 122
  1305  00026A  B4D8               	btfsc	status,2,c
  1306  00026C  EFBB  F000         	goto	l2519
  1307  000270  EF0A  F001         	goto	l2559
  1308  000274  EF1F  F000         	goto	start
  1309  000278                     __end_of_main:
  1310                           	opt callstack 0
  1311                           
  1312 ;; *************** function _printf *****************
  1313 ;; Defined at:
  1314 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;  fmt             2   15[BANK0 ] PTR const unsigned char 
  1317 ;;		 -> STR_19(17), STR_18(32), STR_17(21), STR_16(22), 
  1318 ;;		 -> STR_15(2), STR_14(2), STR_13(13), STR_12(52), 
  1319 ;;		 -> STR_11(29), STR_10(20), STR_9(25), STR_8(22), 
  1320 ;;		 -> STR_7(7), STR_6(15), STR_5(52), STR_4(5), 
  1321 ;;		 -> STR_3(26), STR_2(26), STR_1(20), 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  ap              2   21[BANK0 ] PTR void [1]
  1324 ;;		 -> ?_printf(2), 
  1325 ;;  ret             2    0        int 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  2   15[BANK0 ] int 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1335 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;Total ram usage:        8 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:   12
  1342 ;; This function calls:
  1343 ;;		_vfprintf
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text1
  1350  000CC2                     __ptext1:
  1351                           	opt callstack 0
  1352  000CC2                     _printf:
  1353                           	opt callstack 18
  1354  000CC2  0E9B               	movlw	low (?_printf+2)
  1355  000CC4  0100               	movlb	0	; () banked
  1356  000CC6  6F9F               	movwf	printf@ap& (0+255),b
  1357  000CC8  0E00               	movlw	high (?_printf+2)
  1358  000CCA  6FA0               	movwf	(printf@ap+1)& (0+255),b
  1359  000CCC                     
  1360                           ; BSR set to: 0
  1361  000CCC  0E00               	movlw	0
  1362  000CCE  6F93               	movwf	vfprintf@fp& (0+255),b
  1363  000CD0  0E00               	movlw	0
  1364  000CD2  6F94               	movwf	(vfprintf@fp+1)& (0+255),b
  1365  000CD4  C099  F095         	movff	printf@fmt,vfprintf@fmt
  1366  000CD8  C09A  F096         	movff	printf@fmt+1,vfprintf@fmt+1
  1367  000CDC  0E9F               	movlw	low printf@ap
  1368  000CDE  6F97               	movwf	vfprintf@ap& (0+255),b
  1369  000CE0  0E00               	movlw	high printf@ap
  1370  000CE2  6F98               	movwf	(vfprintf@ap+1)& (0+255),b
  1371  000CE4  EC29  F005         	call	_vfprintf	;wreg free
  1372  000CE8  0012               	return		;funcret
  1373  000CEA                     __end_of_printf:
  1374                           	opt callstack 0
  1375                           
  1376 ;; *************** function _vfprintf *****************
  1377 ;; Defined at:
  1378 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;  fp              2    9[BANK0 ] PTR struct _IO_FILE
  1381 ;;		 -> NULL(0), 
  1382 ;;  fmt             2   11[BANK0 ] PTR const unsigned char 
  1383 ;;		 -> STR_19(17), STR_18(32), STR_17(21), STR_16(22), 
  1384 ;;		 -> STR_15(2), STR_14(2), STR_13(13), STR_12(52), 
  1385 ;;		 -> STR_11(29), STR_10(20), STR_9(25), STR_8(22), 
  1386 ;;		 -> STR_7(7), STR_6(15), STR_5(52), STR_4(5), 
  1387 ;;		 -> STR_3(26), STR_2(26), STR_1(20), 
  1388 ;;  ap              2   13[BANK0 ] PTR PTR void 
  1389 ;;		 -> printf@ap(2), 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  1392 ;;		 -> STR_19(17), STR_18(32), STR_17(21), STR_16(22), 
  1393 ;;		 -> STR_15(2), STR_14(2), STR_13(13), STR_12(52), 
  1394 ;;		 -> STR_11(29), STR_10(20), STR_9(25), STR_8(22), 
  1395 ;;		 -> STR_7(7), STR_6(15), STR_5(52), STR_4(5), 
  1396 ;;		 -> STR_3(26), STR_2(26), STR_1(20), 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  2    9[BANK0 ] int 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1406 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;Total ram usage:        8 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; Hardware stack levels required when called:   11
  1413 ;; This function calls:
  1414 ;;		_vfpfcnvrt
  1415 ;; This function is called by:
  1416 ;;		_printf
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text2
  1421  000A52                     __ptext2:
  1422                           	opt callstack 0
  1423  000A52                     _vfprintf:
  1424                           	opt callstack 18
  1425  000A52                     
  1426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1427  000A52  C095  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  1428  000A56  C096  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1429  000A5A                     
  1430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1431  000A5A  0E00               	movlw	0
  1432  000A5C  0100               	movlb	0	; () banked
  1433  000A5E  6F61               	movwf	(_nout+1)& (0+255),b
  1434  000A60  0E00               	movlw	0
  1435  000A62  6F60               	movwf	_nout& (0+255),b
  1436                           
  1437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1438  000A64  EF47  F005         	goto	l2467
  1439  000A68                     l2465:
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1443  000A68  C093  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  1444  000A6C  C094  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1445  000A70  0E4E               	movlw	low vfprintf@cfmt
  1446  000A72  6E46               	movwf	vfpfcnvrt@fmt^0,c
  1447  000A74  0E00               	movlw	high vfprintf@cfmt
  1448  000A76  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1449  000A78  C097  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  1450  000A7C  C098  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1451  000A80  EC3C  F001         	call	_vfpfcnvrt	;wreg free
  1452  000A84  5044               	movf	?_vfpfcnvrt^0,w,c
  1453  000A86  0100               	movlb	0	; () banked
  1454  000A88  2760               	addwf	_nout& (0+255),f,b
  1455  000A8A  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  1456  000A8C  2361               	addwfc	(_nout+1)& (0+255),f,b
  1457  000A8E                     l2467:
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1461  000A8E  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1462  000A92  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1463  000A96                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1464  000A96  6AF8               	clrf	tblptru,c
  1465  000A98                     	endif
  1466  000A98                     	if	0	;tblptru may be non-zero
  1467  000A98                     	endif
  1468  000A98  0008               	tblrd		*
  1469  000A9A  50F5               	movf	tablat,w,c
  1470  000A9C  0900               	iorlw	0
  1471  000A9E  A4D8               	btfss	status,2,c
  1472  000AA0  EF54  F005         	goto	u1251
  1473  000AA4  EF56  F005         	goto	u1250
  1474  000AA8                     u1251:
  1475  000AA8  EF34  F005         	goto	l2465
  1476  000AAC                     u1250:
  1477  000AAC                     
  1478                           ; BSR set to: 0
  1479                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1480  000AAC  C060  F093         	movff	_nout,?_vfprintf
  1481  000AB0  C061  F094         	movff	_nout+1,?_vfprintf+1
  1482  000AB4                     
  1483                           ; BSR set to: 0
  1484  000AB4  0012               	return		;funcret
  1485  000AB6                     __end_of_vfprintf:
  1486                           	opt callstack 0
  1487                           
  1488 ;; *************** function _vfpfcnvrt *****************
  1489 ;; Defined at:
  1490 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  1493 ;;		 -> NULL(0), 
  1494 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  1495 ;;		 -> vfprintf@cfmt(2), 
  1496 ;;  ap              2   71[COMRAM] PTR PTR void 
  1497 ;;		 -> printf@ap(2), 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  llu             8    0[BANK0 ] unsigned long long 
  1500 ;;  ll              8    0        long long 
  1501 ;;  f               4    0        long long 
  1502 ;;  vp              3    0        PTR void 
  1503 ;;  ct              3    0        unsigned char [3]
  1504 ;;  cp              3    0        PTR unsigned char 
  1505 ;;  i               2    0        int 
  1506 ;;  done            2    0        int 
  1507 ;;  c               1    8[BANK0 ] unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  2   67[COMRAM] int 
  1510 ;; Registers used:
  1511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1517 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;      Totals:        10       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;Total ram usage:       19 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:   10
  1524 ;; This function calls:
  1525 ;;		_ctoa
  1526 ;;		_fputc
  1527 ;;		_utoa
  1528 ;; This function is called by:
  1529 ;;		_vfprintf
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           	psect	text3
  1534  000278                     __ptext3:
  1535                           	opt callstack 0
  1536  000278                     _vfpfcnvrt:
  1537                           	opt callstack 18
  1538  000278                     
  1539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1540  000278  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1541  00027C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1542  000280  CFDE FFF6          	movff	postinc2,tblptrl
  1543  000284  CFDD FFF7          	movff	postdec2,tblptrh
  1544  000288                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1545  000288  6AF8               	clrf	tblptru,c
  1546  00028A                     	endif
  1547  00028A                     	if	0	;tblptru may be non-zero
  1548  00028A                     	endif
  1549  00028A  0008               	tblrd		*
  1550  00028C  50F5               	movf	tablat,w,c
  1551  00028E  0A25               	xorlw	37
  1552  000290  A4D8               	btfss	status,2,c
  1553  000292  EF4D  F001         	goto	u1211
  1554  000296  EF4F  F001         	goto	u1210
  1555  00029A                     u1211:
  1556  00029A  EF26  F002         	goto	l2453
  1557  00029E                     u1210:
  1558  00029E                     
  1559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1560  00029E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1561  0002A2  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1562  0002A6  2ADE               	incf	postinc2,f,c
  1563  0002A8  0E00               	movlw	0
  1564  0002AA  22DD               	addwfc	postdec2,f,c
  1565  0002AC                     
  1566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1567  0002AC  0E00               	movlw	0
  1568  0002AE  6E53               	movwf	(_width+1)^0,c
  1569  0002B0  0E00               	movlw	0
  1570  0002B2  6E52               	movwf	_width^0,c
  1571  0002B4  C052  F064         	movff	_width,_flags
  1572  0002B8  C053  F065         	movff	_width+1,_flags+1
  1573  0002BC                     
  1574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1575  0002BC  0100               	movlb	0	; () banked
  1576  0002BE  6962               	setf	_prec& (0+255),b
  1577  0002C0  6963               	setf	(_prec+1)& (0+255),b
  1578  0002C2                     
  1579                           ; BSR set to: 0
  1580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  1581  0002C2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1582  0002C6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1583  0002CA  CFDE FFF6          	movff	postinc2,tblptrl
  1584  0002CE  CFDD FFF7          	movff	postdec2,tblptrh
  1585  0002D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1586  0002D2  6AF8               	clrf	tblptru,c
  1587  0002D4                     	endif
  1588  0002D4                     	if	0	;tblptru may be non-zero
  1589  0002D4                     	endif
  1590  0002D4  0008               	tblrd		*
  1591  0002D6  50F5               	movf	tablat,w,c
  1592  0002D8  0A63               	xorlw	99
  1593  0002DA  A4D8               	btfss	status,2,c
  1594  0002DC  EF72  F001         	goto	u1221
  1595  0002E0  EF74  F001         	goto	u1220
  1596  0002E4                     u1221:
  1597  0002E4  EF9B  F001         	goto	l2429
  1598  0002E8                     u1220:
  1599  0002E8                     
  1600                           ; BSR set to: 0
  1601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  1602  0002E8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1603  0002EC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1604  0002F0  2ADE               	incf	postinc2,f,c
  1605  0002F2  0E00               	movlw	0
  1606  0002F4  22DD               	addwfc	postdec2,f,c
  1607                           
  1608                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1609  0002F6  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1610  0002FA  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1611  0002FE  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1612  000302  0E02               	movlw	2
  1613  000304  26DE               	addwf	postinc2,f,c
  1614  000306  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1615  00030A  0E00               	movlw	0
  1616  00030C  22DD               	addwfc	postdec2,f,c
  1617  00030E  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1618  000312  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1619  000316  50DF               	movf	indf2,w,c
  1620  000318  6F92               	movwf	vfpfcnvrt@c& (0+255),b
  1621  00031A                     
  1622                           ; BSR set to: 0
  1623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  1624  00031A  C044  F024         	movff	vfpfcnvrt@fp,ctoa@fp
  1625  00031E  C045  F025         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1626  000322  C092  F026         	movff	vfpfcnvrt@c,ctoa@c
  1627  000326  EC5B  F005         	call	_ctoa	;wreg free
  1628  00032A  C024  F044         	movff	?_ctoa,?_vfpfcnvrt
  1629  00032E  C025  F045         	movff	?_ctoa+1,?_vfpfcnvrt+1
  1630  000332  EF42  F002         	goto	l476
  1631  000336                     l2429:
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  1635  000336  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1636  00033A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1637  00033E  CFDE FFF6          	movff	postinc2,tblptrl
  1638  000342  CFDD FFF7          	movff	postdec2,tblptrh
  1639  000346                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1640  000346  6AF8               	clrf	tblptru,c
  1641  000348                     	endif
  1642  000348                     	if	0	;tblptru may be non-zero
  1643  000348                     	endif
  1644  000348  0008               	tblrd		*
  1645  00034A  50F5               	movf	tablat,w,c
  1646  00034C  0A75               	xorlw	117
  1647  00034E  A4D8               	btfss	status,2,c
  1648  000350  EFAC  F001         	goto	u1231
  1649  000354  EFAE  F001         	goto	u1230
  1650  000358                     u1231:
  1651  000358  EFEF  F001         	goto	l2437
  1652  00035C                     u1230:
  1653  00035C                     
  1654                           ; BSR set to: 0
  1655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  1656  00035C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1657  000360  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1658  000364  2ADE               	incf	postinc2,f,c
  1659  000366  0E00               	movlw	0
  1660  000368  22DD               	addwfc	postdec2,f,c
  1661                           
  1662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  1663  00036A  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1664  00036E  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1665  000372  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1666  000376  0E02               	movlw	2
  1667  000378  26DE               	addwf	postinc2,f,c
  1668  00037A  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1669  00037E  0E00               	movlw	0
  1670  000380  22DD               	addwfc	postdec2,f,c
  1671  000382  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1672  000386  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1673  00038A  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+2
  1674  00038E  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+3
  1675  000392  C04C  F08A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1676  000396  C04D  F08B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1677  00039A  6B8C               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  1678  00039C  6B8D               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  1679  00039E  6B8E               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  1680  0003A0  6B8F               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  1681  0003A2  6B90               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  1682  0003A4  6B91               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  1683  0003A6                     
  1684                           ; BSR set to: 0
  1685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  1686  0003A6  C044  F024         	movff	vfpfcnvrt@fp,utoa@fp
  1687  0003AA  C045  F025         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1688  0003AE  C08A  F026         	movff	vfpfcnvrt@llu,utoa@d
  1689  0003B2  C08B  F027         	movff	vfpfcnvrt@llu+1,utoa@d+1
  1690  0003B6  C08C  F028         	movff	vfpfcnvrt@llu+2,utoa@d+2
  1691  0003BA  C08D  F029         	movff	vfpfcnvrt@llu+3,utoa@d+3
  1692  0003BE  C08E  F02A         	movff	vfpfcnvrt@llu+4,utoa@d+4
  1693  0003C2  C08F  F02B         	movff	vfpfcnvrt@llu+5,utoa@d+5
  1694  0003C6  C090  F02C         	movff	vfpfcnvrt@llu+6,utoa@d+6
  1695  0003CA  C091  F02D         	movff	vfpfcnvrt@llu+7,utoa@d+7
  1696  0003CE  EC43  F002         	call	_utoa	;wreg free
  1697  0003D2  C024  F044         	movff	?_utoa,?_vfpfcnvrt
  1698  0003D6  C025  F045         	movff	?_utoa+1,?_vfpfcnvrt+1
  1699  0003DA  EF42  F002         	goto	l476
  1700  0003DE                     l2437:
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1704  0003DE  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1705  0003E2  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1706  0003E6  CFDE FFF6          	movff	postinc2,tblptrl
  1707  0003EA  CFDD FFF7          	movff	postdec2,tblptrh
  1708  0003EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1709  0003EE  6AF8               	clrf	tblptru,c
  1710  0003F0                     	endif
  1711  0003F0                     	if	0	;tblptru may be non-zero
  1712  0003F0                     	endif
  1713  0003F0  0008               	tblrd		*
  1714  0003F2  50F5               	movf	tablat,w,c
  1715  0003F4  0A25               	xorlw	37
  1716  0003F6  A4D8               	btfss	status,2,c
  1717  0003F8  EF00  F002         	goto	u1241
  1718  0003FC  EF02  F002         	goto	u1240
  1719  000400                     u1241:
  1720  000400  EF19  F002         	goto	l2447
  1721  000404                     u1240:
  1722  000404                     
  1723                           ; BSR set to: 0
  1724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1725  000404  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1726  000408  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1727  00040C  2ADE               	incf	postinc2,f,c
  1728  00040E  0E00               	movlw	0
  1729  000410  22DD               	addwfc	postdec2,f,c
  1730  000412                     
  1731                           ; BSR set to: 0
  1732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1733  000412  0E00               	movlw	0
  1734  000414  6E0A               	movwf	(fputc@c+1)^0,c
  1735  000416  0E25               	movlw	37
  1736  000418  6E09               	movwf	fputc@c^0,c
  1737  00041A  C044  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  1738  00041E  C045  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1739  000422  ECDE  F004         	call	_fputc	;wreg free
  1740  000426                     l2443:
  1741                           
  1742                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1743  000426  0E00               	movlw	0
  1744  000428  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1745  00042A  0E01               	movlw	1
  1746  00042C  6E44               	movwf	?_vfpfcnvrt^0,c
  1747  00042E  EF42  F002         	goto	l476
  1748  000432                     l2447:
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1752  000432  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1753  000436  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1754  00043A  2ADE               	incf	postinc2,f,c
  1755  00043C  0E00               	movlw	0
  1756  00043E  22DD               	addwfc	postdec2,f,c
  1757  000440                     
  1758                           ; BSR set to: 0
  1759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1760  000440  0E00               	movlw	0
  1761  000442  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1762  000444  0E00               	movlw	0
  1763  000446  6E44               	movwf	?_vfpfcnvrt^0,c
  1764  000448  EF42  F002         	goto	l476
  1765  00044C                     l2453:
  1766                           
  1767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1768  00044C  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1769  000450  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1770  000454  CFDE FFF6          	movff	postinc2,tblptrl
  1771  000458  CFDD FFF7          	movff	postdec2,tblptrh
  1772  00045C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1773  00045C  6AF8               	clrf	tblptru,c
  1774  00045E                     	endif
  1775  00045E                     	if	0	;tblptru may be non-zero
  1776  00045E                     	endif
  1777  00045E  0008               	tblrd		*
  1778  000460  50F5               	movf	tablat,w,c
  1779  000462  6E09               	movwf	fputc@c^0,c
  1780  000464  6A0A               	clrf	(fputc@c+1)^0,c
  1781  000466  C044  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  1782  00046A  C045  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1783  00046E  ECDE  F004         	call	_fputc	;wreg free
  1784  000472                     
  1785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1786  000472  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1787  000476  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1788  00047A  2ADE               	incf	postinc2,f,c
  1789  00047C  0E00               	movlw	0
  1790  00047E  22DD               	addwfc	postdec2,f,c
  1791  000480  EF13  F002         	goto	l2443
  1792  000484                     l476:
  1793  000484  0012               	return		;funcret
  1794  000486                     __end_of_vfpfcnvrt:
  1795                           	opt callstack 0
  1796                           
  1797 ;; *************** function _utoa *****************
  1798 ;; Defined at:
  1799 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  1802 ;;		 -> NULL(0), 
  1803 ;;  d               8   37[COMRAM] unsigned long long 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  n               8   57[COMRAM] unsigned long long 
  1806 ;;  i               2   65[COMRAM] int 
  1807 ;;  w               2   55[COMRAM] int 
  1808 ;;  p               2   53[COMRAM] int 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  2   35[COMRAM] int 
  1811 ;; Registers used:
  1812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1818 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;Total ram usage:       32 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    9
  1825 ;; This function calls:
  1826 ;;		___lodiv
  1827 ;;		___lomod
  1828 ;;		_pad
  1829 ;; This function is called by:
  1830 ;;		_vfpfcnvrt
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text4
  1835  000486                     __ptext4:
  1836                           	opt callstack 0
  1837  000486                     _utoa:
  1838                           	opt callstack 18
  1839  000486                     
  1840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  1841  000486  0100               	movlb	0	; () banked
  1842  000488  BF63               	btfsc	(_prec+1)& (0+255),7,b
  1843  00048A  EF49  F002         	goto	u1141
  1844  00048E  EF4B  F002         	goto	u1140
  1845  000492                     u1141:
  1846  000492  EF4C  F002         	goto	l2381
  1847  000496                     u1140:
  1848  000496                     
  1849                           ; BSR set to: 0
  1850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  1851  000496  9364               	bcf	_flags& (0+255),1,b
  1852  000498                     l2381:
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  1856  000498  BF63               	btfsc	(_prec+1)& (0+255),7,b
  1857  00049A  EF59  F002         	goto	u1150
  1858  00049E  5163               	movf	(_prec+1)& (0+255),w,b
  1859  0004A0  E106               	bnz	u1151
  1860  0004A2  0562               	decf	_prec& (0+255),w,b
  1861  0004A4  B0D8               	btfsc	status,0,c
  1862  0004A6  EF57  F002         	goto	u1151
  1863  0004AA  EF59  F002         	goto	u1150
  1864  0004AE                     u1151:
  1865  0004AE  EF5F  F002         	goto	l461
  1866  0004B2                     u1150:
  1867  0004B2                     
  1868                           ; BSR set to: 0
  1869  0004B2  0E00               	movlw	0
  1870  0004B4  6E37               	movwf	(utoa@p+1)^0,c
  1871  0004B6  0E01               	movlw	1
  1872  0004B8  6E36               	movwf	utoa@p^0,c
  1873  0004BA  EF63  F002         	goto	l463
  1874  0004BE                     l461:
  1875                           
  1876                           ; BSR set to: 0
  1877  0004BE  C062  F036         	movff	_prec,utoa@p
  1878  0004C2  C063  F037         	movff	_prec+1,utoa@p+1
  1879  0004C6                     l463:
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  1883  0004C6  C052  F038         	movff	_width,utoa@w
  1884  0004CA  C053  F039         	movff	_width+1,utoa@w+1
  1885                           
  1886                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  1887  0004CE  C026  F03A         	movff	utoa@d,utoa@n
  1888  0004D2  C027  F03B         	movff	utoa@d+1,utoa@n+1
  1889  0004D6  C028  F03C         	movff	utoa@d+2,utoa@n+2
  1890  0004DA  C029  F03D         	movff	utoa@d+3,utoa@n+3
  1891  0004DE  C02A  F03E         	movff	utoa@d+4,utoa@n+4
  1892  0004E2  C02B  F03F         	movff	utoa@d+5,utoa@n+5
  1893  0004E6  C02C  F040         	movff	utoa@d+6,utoa@n+6
  1894  0004EA  C02D  F041         	movff	utoa@d+7,utoa@n+7
  1895  0004EE                     
  1896                           ; BSR set to: 0
  1897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  1898  0004EE  0E00               	movlw	0
  1899  0004F0  6E43               	movwf	(utoa@i+1)^0,c
  1900  0004F2  0E1F               	movlw	31
  1901  0004F4  6E42               	movwf	utoa@i^0,c
  1902  0004F6                     
  1903                           ; BSR set to: 0
  1904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  1905  0004F6  0E00               	movlw	0
  1906  0004F8  6F89               	movwf	(_dbuf+31)& (0+255),b
  1907                           
  1908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1909  0004FA  EFF5  F002         	goto	l2399
  1910  0004FE                     l2389:
  1911                           
  1912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  1913  0004FE  0642               	decf	utoa@i^0,f,c
  1914  000500  A0D8               	btfss	status,0,c
  1915  000502  0643               	decf	(utoa@i+1)^0,f,c
  1916  000504                     
  1917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  1918  000504  0E6A               	movlw	low _dbuf
  1919  000506  2442               	addwf	utoa@i^0,w,c
  1920  000508  6ED9               	movwf	fsr2l,c
  1921  00050A  0E00               	movlw	high _dbuf
  1922  00050C  2043               	addwfc	(utoa@i+1)^0,w,c
  1923  00050E  6EDA               	movwf	fsr2h,c
  1924  000510  C03A  F007         	movff	utoa@n,___lomod@dividend
  1925  000514  C03B  F008         	movff	utoa@n+1,___lomod@dividend+1
  1926  000518  C03C  F009         	movff	utoa@n+2,___lomod@dividend+2
  1927  00051C  C03D  F00A         	movff	utoa@n+3,___lomod@dividend+3
  1928  000520  C03E  F00B         	movff	utoa@n+4,___lomod@dividend+4
  1929  000524  C03F  F00C         	movff	utoa@n+5,___lomod@dividend+5
  1930  000528  C040  F00D         	movff	utoa@n+6,___lomod@dividend+6
  1931  00052C  C041  F00E         	movff	utoa@n+7,___lomod@dividend+7
  1932  000530  0E0A               	movlw	10
  1933  000532  6E0F               	movwf	___lomod@divisor^0,c
  1934  000534  0E00               	movlw	0
  1935  000536  6E10               	movwf	(___lomod@divisor+1)^0,c
  1936  000538  0E00               	movlw	0
  1937  00053A  6E11               	movwf	(___lomod@divisor+2)^0,c
  1938  00053C  0E00               	movlw	0
  1939  00053E  6E12               	movwf	(___lomod@divisor+3)^0,c
  1940  000540  0E00               	movlw	0
  1941  000542  6E13               	movwf	(___lomod@divisor+4)^0,c
  1942  000544  0E00               	movlw	0
  1943  000546  6E14               	movwf	(___lomod@divisor+5)^0,c
  1944  000548  0E00               	movlw	0
  1945  00054A  6E15               	movwf	(___lomod@divisor+6)^0,c
  1946  00054C  0E00               	movlw	0
  1947  00054E  6E16               	movwf	(___lomod@divisor+7)^0,c
  1948  000550  ECBC  F003         	call	___lomod	;wreg free
  1949  000554  C007  F02E         	movff	?___lomod,??_utoa
  1950  000558  C008  F02F         	movff	?___lomod+1,??_utoa+1
  1951  00055C  C009  F030         	movff	?___lomod+2,??_utoa+2
  1952  000560  C00A  F031         	movff	?___lomod+3,??_utoa+3
  1953  000564  C00B  F032         	movff	?___lomod+4,??_utoa+4
  1954  000568  C00C  F033         	movff	?___lomod+5,??_utoa+5
  1955  00056C  C00D  F034         	movff	?___lomod+6,??_utoa+6
  1956  000570  C00E  F035         	movff	?___lomod+7,??_utoa+7
  1957  000574  502E               	movf	??_utoa^0,w,c
  1958  000576  0F30               	addlw	48
  1959  000578  6EDF               	movwf	indf2,c
  1960  00057A                     
  1961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  1962  00057A  0636               	decf	utoa@p^0,f,c
  1963  00057C  A0D8               	btfss	status,0,c
  1964  00057E  0637               	decf	(utoa@p+1)^0,f,c
  1965  000580                     
  1966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  1967  000580  0638               	decf	utoa@w^0,f,c
  1968  000582  A0D8               	btfss	status,0,c
  1969  000584  0639               	decf	(utoa@w+1)^0,f,c
  1970  000586                     
  1971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  1972  000586  C03A  F007         	movff	utoa@n,___lodiv@dividend
  1973  00058A  C03B  F008         	movff	utoa@n+1,___lodiv@dividend+1
  1974  00058E  C03C  F009         	movff	utoa@n+2,___lodiv@dividend+2
  1975  000592  C03D  F00A         	movff	utoa@n+3,___lodiv@dividend+3
  1976  000596  C03E  F00B         	movff	utoa@n+4,___lodiv@dividend+4
  1977  00059A  C03F  F00C         	movff	utoa@n+5,___lodiv@dividend+5
  1978  00059E  C040  F00D         	movff	utoa@n+6,___lodiv@dividend+6
  1979  0005A2  C041  F00E         	movff	utoa@n+7,___lodiv@dividend+7
  1980  0005A6  0E0A               	movlw	10
  1981  0005A8  6E0F               	movwf	___lodiv@divisor^0,c
  1982  0005AA  0E00               	movlw	0
  1983  0005AC  6E10               	movwf	(___lodiv@divisor+1)^0,c
  1984  0005AE  0E00               	movlw	0
  1985  0005B0  6E11               	movwf	(___lodiv@divisor+2)^0,c
  1986  0005B2  0E00               	movlw	0
  1987  0005B4  6E12               	movwf	(___lodiv@divisor+3)^0,c
  1988  0005B6  0E00               	movlw	0
  1989  0005B8  6E13               	movwf	(___lodiv@divisor+4)^0,c
  1990  0005BA  0E00               	movlw	0
  1991  0005BC  6E14               	movwf	(___lodiv@divisor+5)^0,c
  1992  0005BE  0E00               	movlw	0
  1993  0005C0  6E15               	movwf	(___lodiv@divisor+6)^0,c
  1994  0005C2  0E00               	movlw	0
  1995  0005C4  6E16               	movwf	(___lodiv@divisor+7)^0,c
  1996  0005C6  EC44  F003         	call	___lodiv	;wreg free
  1997  0005CA  C007  F03A         	movff	?___lodiv,utoa@n
  1998  0005CE  C008  F03B         	movff	?___lodiv+1,utoa@n+1
  1999  0005D2  C009  F03C         	movff	?___lodiv+2,utoa@n+2
  2000  0005D6  C00A  F03D         	movff	?___lodiv+3,utoa@n+3
  2001  0005DA  C00B  F03E         	movff	?___lodiv+4,utoa@n+4
  2002  0005DE  C00C  F03F         	movff	?___lodiv+5,utoa@n+5
  2003  0005E2  C00D  F040         	movff	?___lodiv+6,utoa@n+6
  2004  0005E6  C00E  F041         	movff	?___lodiv+7,utoa@n+7
  2005  0005EA                     l2399:
  2006                           
  2007                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2008  0005EA  5042               	movf	utoa@i^0,w,c
  2009  0005EC  1043               	iorwf	(utoa@i+1)^0,w,c
  2010  0005EE  B4D8               	btfsc	status,2,c
  2011  0005F0  EFFC  F002         	goto	u1161
  2012  0005F4  EFFE  F002         	goto	u1160
  2013  0005F8                     u1161:
  2014  0005F8  EF2F  F003         	goto	l2409
  2015  0005FC                     u1160:
  2016  0005FC  503A               	movf	utoa@n^0,w,c
  2017  0005FE  103B               	iorwf	(utoa@n+1)^0,w,c
  2018  000600  103C               	iorwf	(utoa@n+2)^0,w,c
  2019  000602  103D               	iorwf	(utoa@n+3)^0,w,c
  2020  000604  103E               	iorwf	(utoa@n+4)^0,w,c
  2021  000606  103F               	iorwf	(utoa@n+5)^0,w,c
  2022  000608  1040               	iorwf	(utoa@n+6)^0,w,c
  2023  00060A  1041               	iorwf	(utoa@n+7)^0,w,c
  2024  00060C  A4D8               	btfss	status,2,c
  2025  00060E  EF0B  F003         	goto	u1171
  2026  000612  EF0D  F003         	goto	u1170
  2027  000616                     u1171:
  2028  000616  EF7F  F002         	goto	l2389
  2029  00061A                     u1170:
  2030  00061A  BE37               	btfsc	(utoa@p+1)^0,7,c
  2031  00061C  EF1A  F003         	goto	u1180
  2032  000620  5037               	movf	(utoa@p+1)^0,w,c
  2033  000622  E106               	bnz	u1181
  2034  000624  0436               	decf	utoa@p^0,w,c
  2035  000626  B0D8               	btfsc	status,0,c
  2036  000628  EF18  F003         	goto	u1181
  2037  00062C  EF1A  F003         	goto	u1180
  2038  000630                     u1181:
  2039  000630  EF7F  F002         	goto	l2389
  2040  000634                     u1180:
  2041  000634  BE39               	btfsc	(utoa@w+1)^0,7,c
  2042  000636  EF25  F003         	goto	u1191
  2043  00063A  5039               	movf	(utoa@w+1)^0,w,c
  2044  00063C  E108               	bnz	u1190
  2045  00063E  0438               	decf	utoa@w^0,w,c
  2046  000640  A0D8               	btfss	status,0,c
  2047  000642  EF25  F003         	goto	u1191
  2048  000646  EF27  F003         	goto	u1190
  2049  00064A                     u1191:
  2050  00064A  EF2F  F003         	goto	l2409
  2051  00064E                     u1190:
  2052  00064E  0100               	movlb	0	; () banked
  2053  000650  B364               	btfsc	_flags& (0+255),1,b
  2054  000652  EF2D  F003         	goto	u1201
  2055  000656  EF2F  F003         	goto	u1200
  2056  00065A                     u1201:
  2057  00065A  EF7F  F002         	goto	l2389
  2058  00065E                     u1200:
  2059  00065E                     l2409:
  2060                           
  2061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  2062  00065E  C024  F019         	movff	utoa@fp,pad@fp
  2063  000662  C025  F01A         	movff	utoa@fp+1,pad@fp+1
  2064  000666  0E6A               	movlw	low _dbuf
  2065  000668  2442               	addwf	utoa@i^0,w,c
  2066  00066A  6E1B               	movwf	pad@buf^0,c
  2067  00066C  0E00               	movlw	high _dbuf
  2068  00066E  2043               	addwfc	(utoa@i+1)^0,w,c
  2069  000670  6E1C               	movwf	(pad@buf+1)^0,c
  2070  000672  C038  F01D         	movff	utoa@w,pad@p
  2071  000676  C039  F01E         	movff	utoa@w+1,pad@p+1
  2072  00067A  EC24  F004         	call	_pad	;wreg free
  2073  00067E  C019  F024         	movff	?_pad,?_utoa
  2074  000682  C01A  F025         	movff	?_pad+1,?_utoa+1
  2075  000686  0012               	return		;funcret
  2076  000688                     __end_of_utoa:
  2077                           	opt callstack 0
  2078                           
  2079 ;; *************** function ___lomod *****************
  2080 ;; Defined at:
  2081 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  dividend        8    6[COMRAM] unsigned long long 
  2084 ;;  divisor         8   14[COMRAM] unsigned long long 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  counter         1   22[COMRAM] unsigned char 
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  8    6[COMRAM] unsigned long long 
  2089 ;; Registers used:
  2090 ;;		wreg, status,2, status,0
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2096 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;Total ram usage:       17 bytes
  2101 ;; Hardware stack levels used:    1
  2102 ;; Hardware stack levels required when called:    4
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_utoa
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text5
  2111  000778                     __ptext5:
  2112                           	opt callstack 0
  2113  000778                     ___lomod:
  2114                           	opt callstack 22
  2115  000778  500F               	movf	___lomod@divisor^0,w,c
  2116  00077A  1010               	iorwf	(___lomod@divisor+1)^0,w,c
  2117  00077C  1011               	iorwf	(___lomod@divisor+2)^0,w,c
  2118  00077E  1012               	iorwf	(___lomod@divisor+3)^0,w,c
  2119  000780  1013               	iorwf	(___lomod@divisor+4)^0,w,c
  2120  000782  1014               	iorwf	(___lomod@divisor+5)^0,w,c
  2121  000784  1015               	iorwf	(___lomod@divisor+6)^0,w,c
  2122  000786  1016               	iorwf	(___lomod@divisor+7)^0,w,c
  2123  000788  B4D8               	btfsc	status,2,c
  2124  00078A  EFC9  F003         	goto	u1101
  2125  00078E  EFCB  F003         	goto	u1100
  2126  000792                     u1101:
  2127  000792  EF13  F004         	goto	l935
  2128  000796                     u1100:
  2129  000796  0E01               	movlw	1
  2130  000798  6E17               	movwf	___lomod@counter^0,c
  2131  00079A  EFD9  F003         	goto	l2353
  2132  00079E                     l2351:
  2133  00079E  90D8               	bcf	status,0,c
  2134  0007A0  360F               	rlcf	___lomod@divisor^0,f,c
  2135  0007A2  3610               	rlcf	(___lomod@divisor+1)^0,f,c
  2136  0007A4  3611               	rlcf	(___lomod@divisor+2)^0,f,c
  2137  0007A6  3612               	rlcf	(___lomod@divisor+3)^0,f,c
  2138  0007A8  3613               	rlcf	(___lomod@divisor+4)^0,f,c
  2139  0007AA  3614               	rlcf	(___lomod@divisor+5)^0,f,c
  2140  0007AC  3615               	rlcf	(___lomod@divisor+6)^0,f,c
  2141  0007AE  3616               	rlcf	(___lomod@divisor+7)^0,f,c
  2142  0007B0  2A17               	incf	___lomod@counter^0,f,c
  2143  0007B2                     l2353:
  2144  0007B2  AE16               	btfss	(___lomod@divisor+7)^0,7,c
  2145  0007B4  EFDE  F003         	goto	u1111
  2146  0007B8  EFE0  F003         	goto	u1110
  2147  0007BC                     u1111:
  2148  0007BC  EFCF  F003         	goto	l2351
  2149  0007C0                     u1110:
  2150  0007C0                     l2355:
  2151  0007C0  500F               	movf	___lomod@divisor^0,w,c
  2152  0007C2  5C07               	subwf	___lomod@dividend^0,w,c
  2153  0007C4  5010               	movf	(___lomod@divisor+1)^0,w,c
  2154  0007C6  5808               	subwfb	(___lomod@dividend+1)^0,w,c
  2155  0007C8  5011               	movf	(___lomod@divisor+2)^0,w,c
  2156  0007CA  5809               	subwfb	(___lomod@dividend+2)^0,w,c
  2157  0007CC  5012               	movf	(___lomod@divisor+3)^0,w,c
  2158  0007CE  580A               	subwfb	(___lomod@dividend+3)^0,w,c
  2159  0007D0  5013               	movf	(___lomod@divisor+4)^0,w,c
  2160  0007D2  580B               	subwfb	(___lomod@dividend+4)^0,w,c
  2161  0007D4  5014               	movf	(___lomod@divisor+5)^0,w,c
  2162  0007D6  580C               	subwfb	(___lomod@dividend+5)^0,w,c
  2163  0007D8  5015               	movf	(___lomod@divisor+6)^0,w,c
  2164  0007DA  580D               	subwfb	(___lomod@dividend+6)^0,w,c
  2165  0007DC  5016               	movf	(___lomod@divisor+7)^0,w,c
  2166  0007DE  580E               	subwfb	(___lomod@dividend+7)^0,w,c
  2167  0007E0  A0D8               	btfss	status,0,c
  2168  0007E2  EFF5  F003         	goto	u1121
  2169  0007E6  EFF7  F003         	goto	u1120
  2170  0007EA                     u1121:
  2171  0007EA  EF07  F004         	goto	l2359
  2172  0007EE                     u1120:
  2173  0007EE  500F               	movf	___lomod@divisor^0,w,c
  2174  0007F0  5E07               	subwf	___lomod@dividend^0,f,c
  2175  0007F2  5010               	movf	(___lomod@divisor+1)^0,w,c
  2176  0007F4  5A08               	subwfb	(___lomod@dividend+1)^0,f,c
  2177  0007F6  5011               	movf	(___lomod@divisor+2)^0,w,c
  2178  0007F8  5A09               	subwfb	(___lomod@dividend+2)^0,f,c
  2179  0007FA  5012               	movf	(___lomod@divisor+3)^0,w,c
  2180  0007FC  5A0A               	subwfb	(___lomod@dividend+3)^0,f,c
  2181  0007FE  5013               	movf	(___lomod@divisor+4)^0,w,c
  2182  000800  5A0B               	subwfb	(___lomod@dividend+4)^0,f,c
  2183  000802  5014               	movf	(___lomod@divisor+5)^0,w,c
  2184  000804  5A0C               	subwfb	(___lomod@dividend+5)^0,f,c
  2185  000806  5015               	movf	(___lomod@divisor+6)^0,w,c
  2186  000808  5A0D               	subwfb	(___lomod@dividend+6)^0,f,c
  2187  00080A  5016               	movf	(___lomod@divisor+7)^0,w,c
  2188  00080C  5A0E               	subwfb	(___lomod@dividend+7)^0,f,c
  2189  00080E                     l2359:
  2190  00080E  90D8               	bcf	status,0,c
  2191  000810  3216               	rrcf	(___lomod@divisor+7)^0,f,c
  2192  000812  3215               	rrcf	(___lomod@divisor+6)^0,f,c
  2193  000814  3214               	rrcf	(___lomod@divisor+5)^0,f,c
  2194  000816  3213               	rrcf	(___lomod@divisor+4)^0,f,c
  2195  000818  3212               	rrcf	(___lomod@divisor+3)^0,f,c
  2196  00081A  3211               	rrcf	(___lomod@divisor+2)^0,f,c
  2197  00081C  3210               	rrcf	(___lomod@divisor+1)^0,f,c
  2198  00081E  320F               	rrcf	___lomod@divisor^0,f,c
  2199  000820  2E17               	decfsz	___lomod@counter^0,f,c
  2200  000822  EFE0  F003         	goto	l2355
  2201  000826                     l935:
  2202  000826  C007  F007         	movff	___lomod@dividend,?___lomod
  2203  00082A  C008  F008         	movff	___lomod@dividend+1,?___lomod+1
  2204  00082E  C009  F009         	movff	___lomod@dividend+2,?___lomod+2
  2205  000832  C00A  F00A         	movff	___lomod@dividend+3,?___lomod+3
  2206  000836  C00B  F00B         	movff	___lomod@dividend+4,?___lomod+4
  2207  00083A  C00C  F00C         	movff	___lomod@dividend+5,?___lomod+5
  2208  00083E  C00D  F00D         	movff	___lomod@dividend+6,?___lomod+6
  2209  000842  C00E  F00E         	movff	___lomod@dividend+7,?___lomod+7
  2210  000846  0012               	return		;funcret
  2211  000848                     __end_of___lomod:
  2212                           	opt callstack 0
  2213                           
  2214 ;; *************** function ___lodiv *****************
  2215 ;; Defined at:
  2216 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  dividend        8    6[COMRAM] unsigned long long 
  2219 ;;  divisor         8   14[COMRAM] unsigned long long 
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  quotient        8   22[COMRAM] unsigned long long 
  2222 ;;  counter         1   30[COMRAM] unsigned char 
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  8    6[COMRAM] unsigned long long 
  2225 ;; Registers used:
  2226 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2232 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;Total ram usage:       25 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    4
  2239 ;; This function calls:
  2240 ;;		Nothing
  2241 ;; This function is called by:
  2242 ;;		_utoa
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text6
  2247  000688                     __ptext6:
  2248                           	opt callstack 0
  2249  000688                     ___lodiv:
  2250                           	opt callstack 22
  2251  000688  EE20  F017         	lfsr	2,___lodiv@quotient
  2252  00068C  0E07               	movlw	7
  2253  00068E                     u1061:
  2254  00068E  6ADE               	clrf	postinc2,c
  2255  000690  06E8               	decf	wreg,f,c
  2256  000692  E2FD               	bc	u1061
  2257  000694  500F               	movf	___lodiv@divisor^0,w,c
  2258  000696  1010               	iorwf	(___lodiv@divisor+1)^0,w,c
  2259  000698  1011               	iorwf	(___lodiv@divisor+2)^0,w,c
  2260  00069A  1012               	iorwf	(___lodiv@divisor+3)^0,w,c
  2261  00069C  1013               	iorwf	(___lodiv@divisor+4)^0,w,c
  2262  00069E  1014               	iorwf	(___lodiv@divisor+5)^0,w,c
  2263  0006A0  1015               	iorwf	(___lodiv@divisor+6)^0,w,c
  2264  0006A2  1016               	iorwf	(___lodiv@divisor+7)^0,w,c
  2265  0006A4  B4D8               	btfsc	status,2,c
  2266  0006A6  EF57  F003         	goto	u1071
  2267  0006AA  EF59  F003         	goto	u1070
  2268  0006AE                     u1071:
  2269  0006AE  EFAB  F003         	goto	l925
  2270  0006B2                     u1070:
  2271  0006B2  0E01               	movlw	1
  2272  0006B4  6E1F               	movwf	___lodiv@counter^0,c
  2273  0006B6  EF67  F003         	goto	l2333
  2274  0006BA                     l2331:
  2275  0006BA  90D8               	bcf	status,0,c
  2276  0006BC  360F               	rlcf	___lodiv@divisor^0,f,c
  2277  0006BE  3610               	rlcf	(___lodiv@divisor+1)^0,f,c
  2278  0006C0  3611               	rlcf	(___lodiv@divisor+2)^0,f,c
  2279  0006C2  3612               	rlcf	(___lodiv@divisor+3)^0,f,c
  2280  0006C4  3613               	rlcf	(___lodiv@divisor+4)^0,f,c
  2281  0006C6  3614               	rlcf	(___lodiv@divisor+5)^0,f,c
  2282  0006C8  3615               	rlcf	(___lodiv@divisor+6)^0,f,c
  2283  0006CA  3616               	rlcf	(___lodiv@divisor+7)^0,f,c
  2284  0006CC  2A1F               	incf	___lodiv@counter^0,f,c
  2285  0006CE                     l2333:
  2286  0006CE  AE16               	btfss	(___lodiv@divisor+7)^0,7,c
  2287  0006D0  EF6C  F003         	goto	u1081
  2288  0006D4  EF6E  F003         	goto	u1080
  2289  0006D8                     u1081:
  2290  0006D8  EF5D  F003         	goto	l2331
  2291  0006DC                     u1080:
  2292  0006DC                     l2335:
  2293  0006DC  90D8               	bcf	status,0,c
  2294  0006DE  3617               	rlcf	___lodiv@quotient^0,f,c
  2295  0006E0  3618               	rlcf	(___lodiv@quotient+1)^0,f,c
  2296  0006E2  3619               	rlcf	(___lodiv@quotient+2)^0,f,c
  2297  0006E4  361A               	rlcf	(___lodiv@quotient+3)^0,f,c
  2298  0006E6  361B               	rlcf	(___lodiv@quotient+4)^0,f,c
  2299  0006E8  361C               	rlcf	(___lodiv@quotient+5)^0,f,c
  2300  0006EA  361D               	rlcf	(___lodiv@quotient+6)^0,f,c
  2301  0006EC  361E               	rlcf	(___lodiv@quotient+7)^0,f,c
  2302  0006EE  500F               	movf	___lodiv@divisor^0,w,c
  2303  0006F0  5C07               	subwf	___lodiv@dividend^0,w,c
  2304  0006F2  5010               	movf	(___lodiv@divisor+1)^0,w,c
  2305  0006F4  5808               	subwfb	(___lodiv@dividend+1)^0,w,c
  2306  0006F6  5011               	movf	(___lodiv@divisor+2)^0,w,c
  2307  0006F8  5809               	subwfb	(___lodiv@dividend+2)^0,w,c
  2308  0006FA  5012               	movf	(___lodiv@divisor+3)^0,w,c
  2309  0006FC  580A               	subwfb	(___lodiv@dividend+3)^0,w,c
  2310  0006FE  5013               	movf	(___lodiv@divisor+4)^0,w,c
  2311  000700  580B               	subwfb	(___lodiv@dividend+4)^0,w,c
  2312  000702  5014               	movf	(___lodiv@divisor+5)^0,w,c
  2313  000704  580C               	subwfb	(___lodiv@dividend+5)^0,w,c
  2314  000706  5015               	movf	(___lodiv@divisor+6)^0,w,c
  2315  000708  580D               	subwfb	(___lodiv@dividend+6)^0,w,c
  2316  00070A  5016               	movf	(___lodiv@divisor+7)^0,w,c
  2317  00070C  580E               	subwfb	(___lodiv@dividend+7)^0,w,c
  2318  00070E  A0D8               	btfss	status,0,c
  2319  000710  EF8C  F003         	goto	u1091
  2320  000714  EF8E  F003         	goto	u1090
  2321  000718                     u1091:
  2322  000718  EF9F  F003         	goto	l2343
  2323  00071C                     u1090:
  2324  00071C  500F               	movf	___lodiv@divisor^0,w,c
  2325  00071E  5E07               	subwf	___lodiv@dividend^0,f,c
  2326  000720  5010               	movf	(___lodiv@divisor+1)^0,w,c
  2327  000722  5A08               	subwfb	(___lodiv@dividend+1)^0,f,c
  2328  000724  5011               	movf	(___lodiv@divisor+2)^0,w,c
  2329  000726  5A09               	subwfb	(___lodiv@dividend+2)^0,f,c
  2330  000728  5012               	movf	(___lodiv@divisor+3)^0,w,c
  2331  00072A  5A0A               	subwfb	(___lodiv@dividend+3)^0,f,c
  2332  00072C  5013               	movf	(___lodiv@divisor+4)^0,w,c
  2333  00072E  5A0B               	subwfb	(___lodiv@dividend+4)^0,f,c
  2334  000730  5014               	movf	(___lodiv@divisor+5)^0,w,c
  2335  000732  5A0C               	subwfb	(___lodiv@dividend+5)^0,f,c
  2336  000734  5015               	movf	(___lodiv@divisor+6)^0,w,c
  2337  000736  5A0D               	subwfb	(___lodiv@dividend+6)^0,f,c
  2338  000738  5016               	movf	(___lodiv@divisor+7)^0,w,c
  2339  00073A  5A0E               	subwfb	(___lodiv@dividend+7)^0,f,c
  2340  00073C  8017               	bsf	___lodiv@quotient^0,0,c
  2341  00073E                     l2343:
  2342  00073E  90D8               	bcf	status,0,c
  2343  000740  3216               	rrcf	(___lodiv@divisor+7)^0,f,c
  2344  000742  3215               	rrcf	(___lodiv@divisor+6)^0,f,c
  2345  000744  3214               	rrcf	(___lodiv@divisor+5)^0,f,c
  2346  000746  3213               	rrcf	(___lodiv@divisor+4)^0,f,c
  2347  000748  3212               	rrcf	(___lodiv@divisor+3)^0,f,c
  2348  00074A  3211               	rrcf	(___lodiv@divisor+2)^0,f,c
  2349  00074C  3210               	rrcf	(___lodiv@divisor+1)^0,f,c
  2350  00074E  320F               	rrcf	___lodiv@divisor^0,f,c
  2351  000750  2E1F               	decfsz	___lodiv@counter^0,f,c
  2352  000752  EF6E  F003         	goto	l2335
  2353  000756                     l925:
  2354  000756  C017  F007         	movff	___lodiv@quotient,?___lodiv
  2355  00075A  C018  F008         	movff	___lodiv@quotient+1,?___lodiv+1
  2356  00075E  C019  F009         	movff	___lodiv@quotient+2,?___lodiv+2
  2357  000762  C01A  F00A         	movff	___lodiv@quotient+3,?___lodiv+3
  2358  000766  C01B  F00B         	movff	___lodiv@quotient+4,?___lodiv+4
  2359  00076A  C01C  F00C         	movff	___lodiv@quotient+5,?___lodiv+5
  2360  00076E  C01D  F00D         	movff	___lodiv@quotient+6,?___lodiv+6
  2361  000772  C01E  F00E         	movff	___lodiv@quotient+7,?___lodiv+7
  2362  000776  0012               	return		;funcret
  2363  000778                     __end_of___lodiv:
  2364                           	opt callstack 0
  2365                           
  2366 ;; *************** function _ctoa *****************
  2367 ;; Defined at:
  2368 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  2371 ;;		 -> NULL(0), 
  2372 ;;  c               1   37[COMRAM] unsigned char 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  w               2   38[COMRAM] int 
  2375 ;;  l               2    0        int 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  2   35[COMRAM] int 
  2378 ;; Registers used:
  2379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2385 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;Total ram usage:        5 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    9
  2392 ;; This function calls:
  2393 ;;		_pad
  2394 ;; This function is called by:
  2395 ;;		_vfpfcnvrt
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text7
  2400  000AB6                     __ptext7:
  2401                           	opt callstack 0
  2402  000AB6                     _ctoa:
  2403                           	opt callstack 18
  2404  000AB6                     
  2405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  2406  000AB6  5052               	movf	_width^0,w,c
  2407  000AB8  1053               	iorwf	(_width+1)^0,w,c
  2408  000ABA  A4D8               	btfss	status,2,c
  2409  000ABC  EF62  F005         	goto	u1131
  2410  000AC0  EF64  F005         	goto	u1130
  2411  000AC4                     u1131:
  2412  000AC4  EF6A  F005         	goto	l2367
  2413  000AC8                     u1130:
  2414  000AC8  C052  F027         	movff	_width,ctoa@w
  2415  000ACC  C053  F028         	movff	_width+1,ctoa@w+1
  2416  000AD0  EF70  F005         	goto	l2369
  2417  000AD4                     l2367:
  2418  000AD4  0EFF               	movlw	255
  2419  000AD6  2452               	addwf	_width^0,w,c
  2420  000AD8  6E27               	movwf	ctoa@w^0,c
  2421  000ADA  0EFF               	movlw	255
  2422  000ADC  2053               	addwfc	(_width+1)^0,w,c
  2423  000ADE  6E28               	movwf	(ctoa@w+1)^0,c
  2424  000AE0                     l2369:
  2425                           
  2426                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  2427  000AE0  C026  F06A         	movff	ctoa@c,_dbuf
  2428  000AE4                     
  2429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  2430  000AE4  0E00               	movlw	0
  2431  000AE6  0100               	movlb	0	; () banked
  2432  000AE8  6F6B               	movwf	(_dbuf+1)& (0+255),b
  2433  000AEA                     
  2434                           ; BSR set to: 0
  2435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  2436  000AEA  C024  F019         	movff	ctoa@fp,pad@fp
  2437  000AEE  C025  F01A         	movff	ctoa@fp+1,pad@fp+1
  2438  000AF2  0E6A               	movlw	low _dbuf
  2439  000AF4  6E1B               	movwf	pad@buf^0,c
  2440  000AF6  0E00               	movlw	high _dbuf
  2441  000AF8  6E1C               	movwf	(pad@buf+1)^0,c
  2442  000AFA  C027  F01D         	movff	ctoa@w,pad@p
  2443  000AFE  C028  F01E         	movff	ctoa@w+1,pad@p+1
  2444  000B02  EC24  F004         	call	_pad	;wreg free
  2445  000B06  C019  F024         	movff	?_pad,?_ctoa
  2446  000B0A  C01A  F025         	movff	?_pad+1,?_ctoa+1
  2447  000B0E  0012               	return		;funcret
  2448  000B10                     __end_of_ctoa:
  2449                           	opt callstack 0
  2450                           
  2451 ;; *************** function _pad *****************
  2452 ;; Defined at:
  2453 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  2456 ;;		 -> NULL(0), 
  2457 ;;  buf             2   26[COMRAM] PTR unsigned char 
  2458 ;;		 -> dbuf(32), 
  2459 ;;  p               2   28[COMRAM] int 
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;  w               2   33[COMRAM] int 
  2462 ;;  i               2   31[COMRAM] int 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  2   24[COMRAM] int 
  2465 ;; Registers used:
  2466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2472 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;Total ram usage:       11 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:    8
  2479 ;; This function calls:
  2480 ;;		_fputc
  2481 ;;		_fputs
  2482 ;;		_strlen
  2483 ;; This function is called by:
  2484 ;;		_ctoa
  2485 ;;		_utoa
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text8
  2490  000848                     __ptext8:
  2491                           	opt callstack 0
  2492  000848                     _pad:
  2493                           	opt callstack 18
  2494  000848                     
  2495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2496  000848  0100               	movlb	0	; () banked
  2497  00084A  A164               	btfss	_flags& (0+255),0,b
  2498  00084C  EF2A  F004         	goto	u1021
  2499  000850  EF2C  F004         	goto	u1020
  2500  000854                     u1021:
  2501  000854  EF36  F004         	goto	l2307
  2502  000858                     u1020:
  2503  000858                     
  2504                           ; BSR set to: 0
  2505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2506  000858  C01B  F012         	movff	pad@buf,fputs@s
  2507  00085C  C01C  F013         	movff	pad@buf+1,fputs@s+1
  2508  000860  C019  F014         	movff	pad@fp,fputs@fp
  2509  000864  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  2510  000868  EC88  F005         	call	_fputs	;wreg free
  2511  00086C                     l2307:
  2512                           
  2513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2514  00086C  BE1E               	btfsc	(pad@p+1)^0,7,c
  2515  00086E  EF3B  F004         	goto	u1031
  2516  000872  EF3D  F004         	goto	u1030
  2517  000876                     u1031:
  2518  000876  EF43  F004         	goto	l2311
  2519  00087A                     u1030:
  2520  00087A  C01D  F022         	movff	pad@p,pad@w
  2521  00087E  C01E  F023         	movff	pad@p+1,pad@w+1
  2522  000882  EF47  F004         	goto	l444
  2523  000886                     l2311:
  2524  000886  0E00               	movlw	0
  2525  000888  6E23               	movwf	(pad@w+1)^0,c
  2526  00088A  0E00               	movlw	0
  2527  00088C  6E22               	movwf	pad@w^0,c
  2528  00088E                     l444:
  2529                           
  2530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2531  00088E  0E00               	movlw	0
  2532  000890  6E21               	movwf	(pad@i+1)^0,c
  2533  000892  0E00               	movlw	0
  2534  000894  6E20               	movwf	pad@i^0,c
  2535                           
  2536                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2537  000896  EF59  F004         	goto	l2317
  2538  00089A                     l2313:
  2539                           
  2540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2541  00089A  0E00               	movlw	0
  2542  00089C  6E0A               	movwf	(fputc@c+1)^0,c
  2543  00089E  0E20               	movlw	32
  2544  0008A0  6E09               	movwf	fputc@c^0,c
  2545  0008A2  C019  F00B         	movff	pad@fp,fputc@fp
  2546  0008A6  C01A  F00C         	movff	pad@fp+1,fputc@fp+1
  2547  0008AA  ECDE  F004         	call	_fputc	;wreg free
  2548  0008AE                     
  2549                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2550  0008AE  4A20               	infsnz	pad@i^0,f,c
  2551  0008B0  2A21               	incf	(pad@i+1)^0,f,c
  2552  0008B2                     l2317:
  2553                           
  2554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2555  0008B2  5022               	movf	pad@w^0,w,c
  2556  0008B4  5C20               	subwf	pad@i^0,w,c
  2557  0008B6  5021               	movf	(pad@i+1)^0,w,c
  2558  0008B8  0A80               	xorlw	128
  2559  0008BA  6E1F               	movwf	??_pad^0,c
  2560  0008BC  5023               	movf	(pad@w+1)^0,w,c
  2561  0008BE  0A80               	xorlw	128
  2562  0008C0  581F               	subwfb	??_pad^0,w,c
  2563  0008C2  A0D8               	btfss	status,0,c
  2564  0008C4  EF66  F004         	goto	u1041
  2565  0008C8  EF68  F004         	goto	u1040
  2566  0008CC                     u1041:
  2567  0008CC  EF4D  F004         	goto	l2313
  2568  0008D0                     u1040:
  2569  0008D0                     
  2570                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2571  0008D0  0100               	movlb	0	; () banked
  2572  0008D2  B164               	btfsc	_flags& (0+255),0,b
  2573  0008D4  EF6E  F004         	goto	u1051
  2574  0008D8  EF70  F004         	goto	u1050
  2575  0008DC                     u1051:
  2576  0008DC  EF7A  F004         	goto	l2321
  2577  0008E0                     u1050:
  2578  0008E0                     
  2579                           ; BSR set to: 0
  2580                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2581  0008E0  C01B  F012         	movff	pad@buf,fputs@s
  2582  0008E4  C01C  F013         	movff	pad@buf+1,fputs@s+1
  2583  0008E8  C019  F014         	movff	pad@fp,fputs@fp
  2584  0008EC  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  2585  0008F0  EC88  F005         	call	_fputs	;wreg free
  2586  0008F4                     l2321:
  2587                           
  2588                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2589  0008F4  C01B  F007         	movff	pad@buf,strlen@s
  2590  0008F8  C01C  F008         	movff	pad@buf+1,strlen@s+1
  2591  0008FC  ECE5  F005         	call	_strlen	;wreg free
  2592  000900  5022               	movf	pad@w^0,w,c
  2593  000902  2407               	addwf	?_strlen^0,w,c
  2594  000904  6E19               	movwf	?_pad^0,c
  2595  000906  5023               	movf	(pad@w+1)^0,w,c
  2596  000908  2008               	addwfc	(?_strlen+1)^0,w,c
  2597  00090A  6E1A               	movwf	(?_pad+1)^0,c
  2598  00090C  0012               	return		;funcret
  2599  00090E                     __end_of_pad:
  2600                           	opt callstack 0
  2601                           
  2602 ;; *************** function _strlen *****************
  2603 ;; Defined at:
  2604 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  s               2    6[COMRAM] PTR const unsigned char 
  2607 ;;		 -> dbuf(32), 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  a               2    8[COMRAM] PTR const unsigned char 
  2610 ;;		 -> dbuf(32), 
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  2    6[COMRAM] unsigned int 
  2613 ;; Registers used:
  2614 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;Total ram usage:        4 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:    4
  2627 ;; This function calls:
  2628 ;;		Nothing
  2629 ;; This function is called by:
  2630 ;;		_pad
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text9
  2635  000BCA                     __ptext9:
  2636                           	opt callstack 0
  2637  000BCA                     _strlen:
  2638                           	opt callstack 21
  2639  000BCA  C007  F009         	movff	strlen@s,strlen@a
  2640  000BCE  C008  F00A         	movff	strlen@s+1,strlen@a+1
  2641  000BD2  EFED  F005         	goto	l2297
  2642  000BD6                     l2295:
  2643  000BD6  4A07               	infsnz	strlen@s^0,f,c
  2644  000BD8  2A08               	incf	(strlen@s+1)^0,f,c
  2645  000BDA                     l2297:
  2646  000BDA  C007  FFD9         	movff	strlen@s,fsr2l
  2647  000BDE  C008  FFDA         	movff	strlen@s+1,fsr2h
  2648  000BE2  50DF               	movf	indf2,w,c
  2649  000BE4  A4D8               	btfss	status,2,c
  2650  000BE6  EFF7  F005         	goto	u1011
  2651  000BEA  EFF9  F005         	goto	u1010
  2652  000BEE                     u1011:
  2653  000BEE  EFEB  F005         	goto	l2295
  2654  000BF2                     u1010:
  2655  000BF2  5009               	movf	strlen@a^0,w,c
  2656  000BF4  5C07               	subwf	strlen@s^0,w,c
  2657  000BF6  6E07               	movwf	?_strlen^0,c
  2658  000BF8  500A               	movf	(strlen@a+1)^0,w,c
  2659  000BFA  5808               	subwfb	(strlen@s+1)^0,w,c
  2660  000BFC  6E08               	movwf	(?_strlen+1)^0,c
  2661  000BFE  0012               	return		;funcret
  2662  000C00                     __end_of_strlen:
  2663                           	opt callstack 0
  2664                           
  2665 ;; *************** function _fputs *****************
  2666 ;; Defined at:
  2667 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  s               2   17[COMRAM] PTR const unsigned char 
  2670 ;;		 -> dbuf(32), 
  2671 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  2672 ;;		 -> NULL(0), 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  i               2   22[COMRAM] int 
  2675 ;;  c               1   21[COMRAM] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  2   17[COMRAM] int 
  2678 ;; Registers used:
  2679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2688 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;Total ram usage:        7 bytes
  2690 ;; Hardware stack levels used:    1
  2691 ;; Hardware stack levels required when called:    7
  2692 ;; This function calls:
  2693 ;;		_fputc
  2694 ;; This function is called by:
  2695 ;;		_pad
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           	psect	text10
  2700  000B10                     __ptext10:
  2701                           	opt callstack 0
  2702  000B10                     _fputs:
  2703                           	opt callstack 18
  2704  000B10  0E00               	movlw	0
  2705  000B12  6E18               	movwf	(fputs@i+1)^0,c
  2706  000B14  0E00               	movlw	0
  2707  000B16  6E17               	movwf	fputs@i^0,c
  2708  000B18  EF99  F005         	goto	l2291
  2709  000B1C                     l2287:
  2710  000B1C  C016  F009         	movff	fputs@c,fputc@c
  2711  000B20  6A0A               	clrf	(fputc@c+1)^0,c
  2712  000B22  C014  F00B         	movff	fputs@fp,fputc@fp
  2713  000B26  C015  F00C         	movff	fputs@fp+1,fputc@fp+1
  2714  000B2A  ECDE  F004         	call	_fputc	;wreg free
  2715  000B2E  4A17               	infsnz	fputs@i^0,f,c
  2716  000B30  2A18               	incf	(fputs@i+1)^0,f,c
  2717  000B32                     l2291:
  2718  000B32  5017               	movf	fputs@i^0,w,c
  2719  000B34  2412               	addwf	fputs@s^0,w,c
  2720  000B36  6ED9               	movwf	fsr2l,c
  2721  000B38  5018               	movf	(fputs@i+1)^0,w,c
  2722  000B3A  2013               	addwfc	(fputs@s+1)^0,w,c
  2723  000B3C  6EDA               	movwf	fsr2h,c
  2724  000B3E  50DF               	movf	indf2,w,c
  2725  000B40  6E16               	movwf	fputs@c^0,c
  2726  000B42  5016               	movf	fputs@c^0,w,c
  2727  000B44  A4D8               	btfss	status,2,c
  2728  000B46  EFA7  F005         	goto	u1001
  2729  000B4A  EFA9  F005         	goto	u1000
  2730  000B4E                     u1001:
  2731  000B4E  EF8E  F005         	goto	l2287
  2732  000B52                     u1000:
  2733  000B52  0012               	return		;funcret
  2734  000B54                     __end_of_fputs:
  2735                           	opt callstack 0
  2736                           
  2737 ;; *************** function _fputc *****************
  2738 ;; Defined at:
  2739 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  c               2    8[COMRAM] int 
  2742 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  2743 ;;		 -> NULL(0), 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  2    8[COMRAM] int 
  2748 ;; Registers used:
  2749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;Total ram usage:        9 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    6
  2762 ;; This function calls:
  2763 ;;		_putch
  2764 ;; This function is called by:
  2765 ;;		_pad
  2766 ;;		_vfpfcnvrt
  2767 ;;		_fputs
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text11
  2772  0009BC                     __ptext11:
  2773                           	opt callstack 0
  2774  0009BC                     _fputc:
  2775                           	opt callstack 18
  2776  0009BC  500B               	movf	fputc@fp^0,w,c
  2777  0009BE  100C               	iorwf	(fputc@fp+1)^0,w,c
  2778  0009C0  B4D8               	btfsc	status,2,c
  2779  0009C2  EFE5  F004         	goto	u961
  2780  0009C6  EFE7  F004         	goto	u960
  2781  0009CA                     u961:
  2782  0009CA  EFF0  F004         	goto	l2275
  2783  0009CE                     u960:
  2784  0009CE  500B               	movf	fputc@fp^0,w,c
  2785  0009D0  100C               	iorwf	(fputc@fp+1)^0,w,c
  2786  0009D2  A4D8               	btfss	status,2,c
  2787  0009D4  EFEE  F004         	goto	u971
  2788  0009D8  EFF0  F004         	goto	u970
  2789  0009DC                     u971:
  2790  0009DC  EFF5  F004         	goto	l2277
  2791  0009E0                     u970:
  2792  0009E0                     l2275:
  2793  0009E0  5009               	movf	fputc@c^0,w,c
  2794  0009E2  ECFD  F006         	call	_putch
  2795  0009E6  EF28  F005         	goto	l1170
  2796  0009EA                     l2277:
  2797  0009EA  EE20 F004          	lfsr	2,4
  2798  0009EE  500B               	movf	fputc@fp^0,w,c
  2799  0009F0  26D9               	addwf	fsr2l,f,c
  2800  0009F2  500C               	movf	(fputc@fp+1)^0,w,c
  2801  0009F4  22DA               	addwfc	fsr2h,f,c
  2802  0009F6  50DE               	movf	postinc2,w,c
  2803  0009F8  10DE               	iorwf	postinc2,w,c
  2804  0009FA  B4D8               	btfsc	status,2,c
  2805  0009FC  EF02  F005         	goto	u981
  2806  000A00  EF04  F005         	goto	u980
  2807  000A04                     u981:
  2808  000A04  EF1F  F005         	goto	l2281
  2809  000A08                     u980:
  2810  000A08  EE20 F004          	lfsr	2,4
  2811  000A0C  500B               	movf	fputc@fp^0,w,c
  2812  000A0E  26D9               	addwf	fsr2l,f,c
  2813  000A10  500C               	movf	(fputc@fp+1)^0,w,c
  2814  000A12  22DA               	addwfc	fsr2h,f,c
  2815  000A14  EE10 F002          	lfsr	1,2
  2816  000A18  500B               	movf	fputc@fp^0,w,c
  2817  000A1A  26E1               	addwf	fsr1l,f,c
  2818  000A1C  500C               	movf	(fputc@fp+1)^0,w,c
  2819  000A1E  22E2               	addwfc	fsr1h,f,c
  2820  000A20  50DE               	movf	postinc2,w,c
  2821  000A22  5CE6               	subwf	postinc1,w,c
  2822  000A24  50E6               	movf	postinc1,w,c
  2823  000A26  0A80               	xorlw	128
  2824  000A28  6E11               	movwf	(??_fputc+4)^0,c
  2825  000A2A  50DE               	movf	postinc2,w,c
  2826  000A2C  0A80               	xorlw	128
  2827  000A2E  5811               	subwfb	(??_fputc+4)^0,w,c
  2828  000A30  B0D8               	btfsc	status,0,c
  2829  000A32  EF1D  F005         	goto	u991
  2830  000A36  EF1F  F005         	goto	u990
  2831  000A3A                     u991:
  2832  000A3A  EF28  F005         	goto	l1170
  2833  000A3E                     u990:
  2834  000A3E                     l2281:
  2835  000A3E  EE20 F002          	lfsr	2,2
  2836  000A42  500B               	movf	fputc@fp^0,w,c
  2837  000A44  26D9               	addwf	fsr2l,f,c
  2838  000A46  500C               	movf	(fputc@fp+1)^0,w,c
  2839  000A48  22DA               	addwfc	fsr2h,f,c
  2840  000A4A  2ADE               	incf	postinc2,f,c
  2841  000A4C  0E00               	movlw	0
  2842  000A4E  22DD               	addwfc	postdec2,f,c
  2843  000A50                     l1170:
  2844  000A50  0012               	return		;funcret
  2845  000A52                     __end_of_fputc:
  2846                           	opt callstack 0
  2847                           
  2848 ;; *************** function _putch *****************
  2849 ;; Defined at:
  2850 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  txData          1    wreg     unsigned char 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  txData          1    7[COMRAM] unsigned char 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      void 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;Total ram usage:        1 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    5
  2871 ;; This function calls:
  2872 ;;		_EUSART1_Write
  2873 ;; This function is called by:
  2874 ;;		_fputc
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text12
  2879  000DFA                     __ptext12:
  2880                           	opt callstack 0
  2881  000DFA                     _putch:
  2882                           	opt callstack 18
  2883                           
  2884                           ;incstack = 0
  2885                           ;putch@txData stored from wreg
  2886  000DFA  6E08               	movwf	putch@txData^0,c
  2887  000DFC                     
  2888                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  2889  000DFC  5008               	movf	putch@txData^0,w,c
  2890  000DFE  ECD9  F006         	call	_EUSART1_Write
  2891  000E02  0012               	return		;funcret
  2892  000E04                     __end_of_putch:
  2893                           	opt callstack 0
  2894                           
  2895 ;; *************** function _EUSART1_Write *****************
  2896 ;; Defined at:
  2897 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  txData          1    wreg     unsigned char 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  txData          1    6[COMRAM] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;Total ram usage:        1 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    4
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_putch
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text13
  2926  000DB2                     __ptext13:
  2927                           	opt callstack 0
  2928  000DB2                     _EUSART1_Write:
  2929                           	opt callstack 18
  2930                           
  2931                           ;incstack = 0
  2932                           ;EUSART1_Write@txData stored from wreg
  2933  000DB2  6E07               	movwf	EUSART1_Write@txData^0,c
  2934  000DB4                     l139:
  2935                           
  2936                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  2937  000DB4  A89E               	btfss	158,4,c	;volatile
  2938  000DB6  EFDF  F006         	goto	u951
  2939  000DBA  EFE1  F006         	goto	u950
  2940  000DBE                     u951:
  2941  000DBE  EFDA  F006         	goto	l139
  2942  000DC2                     u950:
  2943  000DC2                     
  2944                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  2945  000DC2  C007  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2946  000DC6  0012               	return		;funcret
  2947  000DC8                     __end_of_EUSART1_Write:
  2948                           	opt callstack 0
  2949                           
  2950 ;; *************** function _SYSTEM_Initialize *****************
  2951 ;; Defined at:
  2952 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;		None
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      void 
  2959 ;; Registers used:
  2960 ;;		wreg, status,2, status,0, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;Total ram usage:        0 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    6
  2973 ;; This function calls:
  2974 ;;		_EPWM1_Initialize
  2975 ;;		_EPWM2_Initialize
  2976 ;;		_EUSART1_Initialize
  2977 ;;		_INTERRUPT_Initialize
  2978 ;;		_OSCILLATOR_Initialize
  2979 ;;		_PIN_MANAGER_Initialize
  2980 ;;		_TMR0_Initialize
  2981 ;;		_TMR1_Initialize
  2982 ;;		_TMR2_Initialize
  2983 ;; This function is called by:
  2984 ;;		_main
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text14
  2989  000D12                     __ptext14:
  2990                           	opt callstack 0
  2991  000D12                     _SYSTEM_Initialize:
  2992                           	opt callstack 24
  2993  000D12                     
  2994                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  2995  000D12  EC1B  F007         	call	_INTERRUPT_Initialize	;wreg free
  2996  000D16                     
  2997                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2998  000D16  EC4A  F006         	call	_PIN_MANAGER_Initialize	;wreg free
  2999  000D1A                     
  3000                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3001  000D1A  ECF6  F006         	call	_OSCILLATOR_Initialize	;wreg free
  3002  000D1E                     
  3003                           ;mcc_generated_files/mcc.c: 56:     EPWM2_Initialize();
  3004  000D1E  EC9C  F006         	call	_EPWM2_Initialize	;wreg free
  3005  000D22                     
  3006                           ;mcc_generated_files/mcc.c: 57:     EPWM1_Initialize();
  3007  000D22  ECAC  F006         	call	_EPWM1_Initialize	;wreg free
  3008  000D26                     
  3009                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  3010  000D26  ECEE  F006         	call	_TMR2_Initialize	;wreg free
  3011  000D2A                     
  3012                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
  3013  000D2A  ECCB  F006         	call	_TMR1_Initialize	;wreg free
  3014  000D2E                     
  3015                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  3016  000D2E  EC00  F006         	call	_TMR0_Initialize	;wreg free
  3017  000D32                     
  3018                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  3019  000D32  ECAA  F005         	call	_EUSART1_Initialize	;wreg free
  3020  000D36  0012               	return		;funcret
  3021  000D38                     __end_of_SYSTEM_Initialize:
  3022                           	opt callstack 0
  3023                           
  3024 ;; *************** function _TMR2_Initialize *****************
  3025 ;; Defined at:
  3026 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;		None
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;		None
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;Total ram usage:        0 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    4
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_SYSTEM_Initialize
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text15
  3055  000DDC                     __ptext15:
  3056                           	opt callstack 0
  3057  000DDC                     _TMR2_Initialize:
  3058                           	opt callstack 25
  3059  000DDC                     
  3060                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x00;
  3061  000DDC  0E00               	movlw	0
  3062  000DDE  6EBB               	movwf	187,c	;volatile
  3063                           
  3064                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  3065  000DE0  0E00               	movlw	0
  3066  000DE2  6EBC               	movwf	188,c	;volatile
  3067  000DE4                     
  3068                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  3069  000DE4  929E               	bcf	158,1,c	;volatile
  3070                           
  3071                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x06;
  3072  000DE6  0E06               	movlw	6
  3073  000DE8  6EBA               	movwf	186,c	;volatile
  3074  000DEA  0012               	return		;funcret
  3075  000DEC                     __end_of_TMR2_Initialize:
  3076                           	opt callstack 0
  3077                           
  3078 ;; *************** function _TMR1_Initialize *****************
  3079 ;; Defined at:
  3080 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;		None
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, status,2
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;Total ram usage:        0 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    4
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_SYSTEM_Initialize
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           	psect	text16
  3109  000D96                     __ptext16:
  3110                           	opt callstack 0
  3111  000D96                     _TMR1_Initialize:
  3112                           	opt callstack 25
  3113  000D96                     
  3114                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  3115  000D96  0E00               	movlw	0
  3116  000D98  6ECC               	movwf	204,c	;volatile
  3117                           
  3118                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
  3119  000D9A  0E00               	movlw	0
  3120  000D9C  6ECF               	movwf	207,c	;volatile
  3121                           
  3122                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  3123  000D9E  0E00               	movlw	0
  3124  000DA0  6ECE               	movwf	206,c	;volatile
  3125  000DA2                     
  3126                           ;mcc_generated_files/tmr1.c: 77:     timer1ReloadVal=TMR1;
  3127  000DA2  CFCE F0A4          	movff	4046,_timer1ReloadVal	;volatile
  3128  000DA6  CFCF F0A5          	movff	4047,_timer1ReloadVal+1	;volatile
  3129  000DAA                     
  3130                           ;mcc_generated_files/tmr1.c: 80:     PIR1bits.TMR1IF = 0;
  3131  000DAA  909E               	bcf	158,0,c	;volatile
  3132                           
  3133                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x01;
  3134  000DAC  0E01               	movlw	1
  3135  000DAE  6ECD               	movwf	205,c	;volatile
  3136  000DB0  0012               	return		;funcret
  3137  000DB2                     __end_of_TMR1_Initialize:
  3138                           	opt callstack 0
  3139                           
  3140 ;; *************** function _TMR0_Initialize *****************
  3141 ;; Defined at:
  3142 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;Total ram usage:        2 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:    5
  3163 ;; This function calls:
  3164 ;;		_TMR0_SetInterruptHandler
  3165 ;; This function is called by:
  3166 ;;		_SYSTEM_Initialize
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text17
  3171  000C00                     __ptext17:
  3172                           	opt callstack 0
  3173  000C00                     _TMR0_Initialize:
  3174                           	opt callstack 24
  3175  000C00                     
  3176                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  3177  000C00  9CD5               	bcf	213,6,c	;volatile
  3178                           
  3179                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xFF;
  3180  000C02  68D7               	setf	215,c	;volatile
  3181  000C04                     
  3182                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0xD7;
  3183  000C04  0ED7               	movlw	215
  3184  000C06  6ED6               	movwf	214,c	;volatile
  3185  000C08                     
  3186                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  3187  000C08  50D6               	movf	214,w,c	;volatile
  3188  000C0A  CFD7 F009          	movff	4055,??_TMR0_Initialize	;volatile
  3189  000C0E  6A0A               	clrf	(??_TMR0_Initialize+1)^0,c
  3190  000C10  C009  F00A         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  3191  000C14  6A09               	clrf	??_TMR0_Initialize^0,c
  3192  000C16  1009               	iorwf	??_TMR0_Initialize^0,w,c
  3193  000C18  6E56               	movwf	_timer0ReloadVal^0,c	;volatile
  3194  000C1A  500A               	movf	(??_TMR0_Initialize+1)^0,w,c
  3195  000C1C  6E57               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  3196  000C1E                     
  3197                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  3198  000C1E  94F2               	bcf	242,2,c	;volatile
  3199  000C20                     
  3200                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  3201  000C20  8AF2               	bsf	242,5,c	;volatile
  3202  000C22                     
  3203                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3204  000C22  0E3A               	movlw	low _TMR0_DefaultInterruptHandler
  3205  000C24  6E07               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3206  000C26  0E0E               	movlw	high _TMR0_DefaultInterruptHandler
  3207  000C28  6E08               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3208  000C2A  EC02  F007         	call	_TMR0_SetInterruptHandler	;wreg free
  3209  000C2E                     
  3210                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x93;
  3211  000C2E  0E93               	movlw	147
  3212  000C30  6ED5               	movwf	213,c	;volatile
  3213  000C32  0012               	return		;funcret
  3214  000C34                     __end_of_TMR0_Initialize:
  3215                           	opt callstack 0
  3216                           
  3217 ;; *************** function _TMR0_SetInterruptHandler *****************
  3218 ;; Defined at:
  3219 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  3222 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg, status,2, status,0
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3238 ;;Total ram usage:        2 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    4
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_TMR0_Initialize
  3245 ;;		_main
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           	psect	text18
  3250  000E04                     __ptext18:
  3251                           	opt callstack 0
  3252  000E04                     _TMR0_SetInterruptHandler:
  3253                           	opt callstack 26
  3254  000E04                     
  3255                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  3256  000E04  C007  F0A6         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3257  000E08  C008  F0A7         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3258  000E0C  0012               	return		;funcret
  3259  000E0E                     __end_of_TMR0_SetInterruptHandler:
  3260                           	opt callstack 0
  3261                           
  3262 ;; *************** function _PIN_MANAGER_Initialize *****************
  3263 ;; Defined at:
  3264 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;		None
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;Total ram usage:        0 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    4
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_SYSTEM_Initialize
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           	psect	text19
  3293  000C94                     __ptext19:
  3294                           	opt callstack 0
  3295  000C94                     _PIN_MANAGER_Initialize:
  3296                           	opt callstack 25
  3297  000C94                     
  3298                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3299  000C94  0E00               	movlw	0
  3300  000C96  6E89               	movwf	137,c	;volatile
  3301                           
  3302                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3303  000C98  0E00               	movlw	0
  3304  000C9A  6E8A               	movwf	138,c	;volatile
  3305                           
  3306                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3307  000C9C  0E00               	movlw	0
  3308  000C9E  6E8B               	movwf	139,c	;volatile
  3309                           
  3310                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xDC;
  3311  000CA0  0EDC               	movlw	220
  3312  000CA2  6E92               	movwf	146,c	;volatile
  3313                           
  3314                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x1F;
  3315  000CA4  0E1F               	movlw	31
  3316  000CA6  6E93               	movwf	147,c	;volatile
  3317                           
  3318                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xB9;
  3319  000CA8  0EB9               	movlw	185
  3320  000CAA  6E94               	movwf	148,c	;volatile
  3321                           
  3322                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  3323  000CAC  0E3C               	movlw	60
  3324  000CAE  010F               	movlb	15	; () banked
  3325  000CB0  6F3A               	movwf	58,b	;volatile
  3326                           
  3327                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  3328  000CB2  0E3F               	movlw	63
  3329  000CB4  6F39               	movwf	57,b	;volatile
  3330                           
  3331                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x27;
  3332  000CB6  0E27               	movlw	39
  3333  000CB8  6F38               	movwf	56,b	;volatile
  3334                           
  3335                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3336  000CBA  0E00               	movlw	0
  3337  000CBC  6E61               	movwf	97,c	;volatile
  3338  000CBE                     
  3339                           ; BSR set to: 15
  3340                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  3341  000CBE  8EF1               	bsf	241,7,c	;volatile
  3342  000CC0                     
  3343                           ; BSR set to: 15
  3344  000CC0  0012               	return		;funcret
  3345  000CC2                     __end_of_PIN_MANAGER_Initialize:
  3346                           	opt callstack 0
  3347                           
  3348 ;; *************** function _OSCILLATOR_Initialize *****************
  3349 ;; Defined at:
  3350 ;;		line 64 in file "mcc_generated_files/mcc.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;Total ram usage:        0 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    4
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_SYSTEM_Initialize
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text20
  3379  000DEC                     __ptext20:
  3380                           	opt callstack 0
  3381  000DEC                     _OSCILLATOR_Initialize:
  3382                           	opt callstack 25
  3383  000DEC                     
  3384                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x30;
  3385  000DEC  0E30               	movlw	48
  3386  000DEE  6ED3               	movwf	211,c	;volatile
  3387                           
  3388                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x04;
  3389  000DF0  0E04               	movlw	4
  3390  000DF2  6ED2               	movwf	210,c	;volatile
  3391                           
  3392                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  3393  000DF4  0E00               	movlw	0
  3394  000DF6  6E9B               	movwf	155,c	;volatile
  3395  000DF8  0012               	return		;funcret
  3396  000DFA                     __end_of_OSCILLATOR_Initialize:
  3397                           	opt callstack 0
  3398                           
  3399 ;; *************** function _INTERRUPT_Initialize *****************
  3400 ;; Defined at:
  3401 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;		None
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;		None
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  1    wreg      void 
  3408 ;; Registers used:
  3409 ;;		None
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;Total ram usage:        0 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:    4
  3422 ;; This function calls:
  3423 ;;		Nothing
  3424 ;; This function is called by:
  3425 ;;		_SYSTEM_Initialize
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text21
  3430  000E36                     __ptext21:
  3431                           	opt callstack 0
  3432  000E36                     _INTERRUPT_Initialize:
  3433                           	opt callstack 25
  3434  000E36                     
  3435                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  3436  000E36  9ED0               	bcf	208,7,c	;volatile
  3437  000E38  0012               	return		;funcret
  3438  000E3A                     __end_of_INTERRUPT_Initialize:
  3439                           	opt callstack 0
  3440                           
  3441 ;; *************** function _EUSART1_Initialize *****************
  3442 ;; Defined at:
  3443 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;		None
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3461 ;;Total ram usage:        0 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; Hardware stack levels required when called:    5
  3464 ;; This function calls:
  3465 ;;		_EUSART1_SetErrorHandler
  3466 ;;		_EUSART1_SetFramingErrorHandler
  3467 ;;		_EUSART1_SetOverrunErrorHandler
  3468 ;; This function is called by:
  3469 ;;		_SYSTEM_Initialize
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text22
  3474  000B54                     __ptext22:
  3475                           	opt callstack 0
  3476  000B54                     _EUSART1_Initialize:
  3477                           	opt callstack 24
  3478  000B54                     
  3479                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  3480  000B54  0E08               	movlw	8
  3481  000B56  6EB8               	movwf	184,c	;volatile
  3482                           
  3483                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  3484  000B58  0E90               	movlw	144
  3485  000B5A  6EAB               	movwf	171,c	;volatile
  3486                           
  3487                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  3488  000B5C  0E24               	movlw	36
  3489  000B5E  6EAC               	movwf	172,c	;volatile
  3490                           
  3491                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x19;
  3492  000B60  0E19               	movlw	25
  3493  000B62  6EAF               	movwf	175,c	;volatile
  3494                           
  3495                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x00;
  3496  000B64  0E00               	movlw	0
  3497  000B66  6EB0               	movwf	176,c	;volatile
  3498  000B68                     
  3499                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  3500  000B68  0E00               	movlw	0
  3501  000B6A  6E07               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3502  000B6C  0E00               	movlw	0
  3503  000B6E  6E08               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3504  000B70  EC0C  F007         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3505  000B74                     
  3506                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  3507  000B74  0E00               	movlw	0
  3508  000B76  6E07               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3509  000B78  0E00               	movlw	0
  3510  000B7A  6E08               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3511  000B7C  EC07  F007         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3512  000B80                     
  3513                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  3514  000B80  0E00               	movlw	0
  3515  000B82  6E07               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3516  000B84  0E00               	movlw	0
  3517  000B86  6E08               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3518  000B88  EC11  F007         	call	_EUSART1_SetErrorHandler	;wreg free
  3519  000B8C                     
  3520                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  3521  000B8C  0E00               	movlw	0
  3522  000B8E  6E55               	movwf	_eusart1RxLastError^0,c	;volatile
  3523  000B90  0012               	return		;funcret
  3524  000B92                     __end_of_EUSART1_Initialize:
  3525                           	opt callstack 0
  3526                           
  3527 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3528 ;; Defined at:
  3529 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  3532 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      void 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2, status,0
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;Total ram usage:        2 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    4
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_EUSART1_Initialize
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text23
  3559  000E0E                     __ptext23:
  3560                           	opt callstack 0
  3561  000E0E                     _EUSART1_SetOverrunErrorHandler:
  3562                           	opt callstack 24
  3563  000E0E                     
  3564                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  3565  000E0E  C007  F0AA         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3566  000E12  C008  F0AB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3567  000E16  0012               	return		;funcret
  3568  000E18                     __end_of_EUSART1_SetOverrunErrorHandler:
  3569                           	opt callstack 0
  3570                           
  3571 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3572 ;; Defined at:
  3573 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  3576 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg, status,2, status,0
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;Total ram usage:        2 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    4
  3595 ;; This function calls:
  3596 ;;		Nothing
  3597 ;; This function is called by:
  3598 ;;		_EUSART1_Initialize
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text24
  3603  000E18                     __ptext24:
  3604                           	opt callstack 0
  3605  000E18                     _EUSART1_SetFramingErrorHandler:
  3606                           	opt callstack 24
  3607  000E18                     
  3608                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  3609  000E18  C007  F0AC         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3610  000E1C  C008  F0AD         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3611  000E20  0012               	return		;funcret
  3612  000E22                     __end_of_EUSART1_SetFramingErrorHandler:
  3613                           	opt callstack 0
  3614                           
  3615 ;; *************** function _EUSART1_SetErrorHandler *****************
  3616 ;; Defined at:
  3617 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  3620 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      void 
  3625 ;; Registers used:
  3626 ;;		wreg, status,2, status,0
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;Total ram usage:        2 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; Hardware stack levels required when called:    4
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_EUSART1_Initialize
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text25
  3647  000E22                     __ptext25:
  3648                           	opt callstack 0
  3649  000E22                     _EUSART1_SetErrorHandler:
  3650                           	opt callstack 24
  3651  000E22                     
  3652                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  3653  000E22  C007  F0A8         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3654  000E26  C008  F0A9         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3655  000E2A  0012               	return		;funcret
  3656  000E2C                     __end_of_EUSART1_SetErrorHandler:
  3657                           	opt callstack 0
  3658                           
  3659 ;; *************** function _EPWM2_Initialize *****************
  3660 ;; Defined at:
  3661 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;		None
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;		None
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg, status,2
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;Total ram usage:        0 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:    4
  3682 ;; This function calls:
  3683 ;;		Nothing
  3684 ;; This function is called by:
  3685 ;;		_SYSTEM_Initialize
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           	psect	text26
  3690  000D38                     __ptext26:
  3691                           	opt callstack 0
  3692  000D38                     _EPWM2_Initialize:
  3693                           	opt callstack 25
  3694  000D38                     
  3695                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x1C;
  3696  000D38  0E1C               	movlw	28
  3697  000D3A  6E66               	movwf	102,c	;volatile
  3698                           
  3699                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  3700  000D3C  0E00               	movlw	0
  3701  000D3E  6E64               	movwf	100,c	;volatile
  3702                           
  3703                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  3704  000D40  0E80               	movlw	128
  3705  000D42  6E65               	movwf	101,c	;volatile
  3706                           
  3707                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  3708  000D44  0E01               	movlw	1
  3709  000D46  6E63               	movwf	99,c	;volatile
  3710                           
  3711                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  3712  000D48  0E00               	movlw	0
  3713  000D4A  6E68               	movwf	104,c	;volatile
  3714                           
  3715                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x00;
  3716  000D4C  0E00               	movlw	0
  3717  000D4E  6E67               	movwf	103,c	;volatile
  3718                           
  3719                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  3720  000D50  0EE7               	movlw	-25
  3721  000D52  010F               	movlb	15	; () banked
  3722  000D54  1749               	andwf	73,f,b	;volatile
  3723  000D56                     
  3724                           ; BSR set to: 15
  3725  000D56  0012               	return		;funcret
  3726  000D58                     __end_of_EPWM2_Initialize:
  3727                           	opt callstack 0
  3728                           
  3729 ;; *************** function _EPWM1_Initialize *****************
  3730 ;; Defined at:
  3731 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;		None
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;		None
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      void 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3749 ;;Total ram usage:        0 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:    4
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_SYSTEM_Initialize
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text27
  3760  000D58                     __ptext27:
  3761                           	opt callstack 0
  3762  000D58                     _EPWM1_Initialize:
  3763                           	opt callstack 25
  3764  000D58                     
  3765                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x1C;
  3766  000D58  0E1C               	movlw	28
  3767  000D5A  6EBD               	movwf	189,c	;volatile
  3768                           
  3769                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  3770  000D5C  0E00               	movlw	0
  3771  000D5E  6EB6               	movwf	182,c	;volatile
  3772                           
  3773                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  3774  000D60  0E80               	movlw	128
  3775  000D62  6EB7               	movwf	183,c	;volatile
  3776                           
  3777                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  3778  000D64  0E01               	movlw	1
  3779  000D66  6EB9               	movwf	185,c	;volatile
  3780                           
  3781                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  3782  000D68  0E00               	movlw	0
  3783  000D6A  6EBF               	movwf	191,c	;volatile
  3784                           
  3785                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x00;
  3786  000D6C  0E00               	movlw	0
  3787  000D6E  6EBE               	movwf	190,c	;volatile
  3788                           
  3789                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  3790  000D70  0EFC               	movlw	-4
  3791  000D72  010F               	movlb	15	; () banked
  3792  000D74  1749               	andwf	73,f,b	;volatile
  3793  000D76                     
  3794                           ; BSR set to: 15
  3795  000D76  0012               	return		;funcret
  3796  000D78                     __end_of_EPWM1_Initialize:
  3797                           	opt callstack 0
  3798                           
  3799 ;; *************** function _EUSART1_is_rx_ready *****************
  3800 ;; Defined at:
  3801 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;		None
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  1    wreg      _Bool 
  3808 ;; Registers used:
  3809 ;;		wreg
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;Total ram usage:        0 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; Hardware stack levels required when called:    4
  3822 ;; This function calls:
  3823 ;;		Nothing
  3824 ;; This function is called by:
  3825 ;;		_main
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text28
  3830  000DC8                     __ptext28:
  3831                           	opt callstack 0
  3832  000DC8                     _EUSART1_is_rx_ready:
  3833                           	opt callstack 26
  3834  000DC8                     
  3835                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  3836  000DC8  BA9E               	btfsc	158,5,c	;volatile
  3837  000DCA  EFE9  F006         	goto	u831
  3838  000DCE  EFEC  F006         	goto	u830
  3839  000DD2                     u831:
  3840  000DD2  0E01               	movlw	1
  3841  000DD4  EFED  F006         	goto	u836
  3842  000DD8                     u830:
  3843  000DD8  0E00               	movlw	0
  3844  000DDA                     u836:
  3845  000DDA  0012               	return		;funcret
  3846  000DDC                     __end_of_EUSART1_is_rx_ready:
  3847                           	opt callstack 0
  3848                           
  3849 ;; *************** function _EUSART1_Read *****************
  3850 ;; Defined at:
  3851 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;		None
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;		None
  3856 ;; Return value:  Size  Location     Type
  3857 ;;                  1    wreg      unsigned char 
  3858 ;; Registers used:
  3859 ;;		wreg, status,2
  3860 ;; Tracked objects:
  3861 ;;		On entry : 0/0
  3862 ;;		On exit  : 0/0
  3863 ;;		Unchanged: 0/0
  3864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3869 ;;Total ram usage:        0 bytes
  3870 ;; Hardware stack levels used:    1
  3871 ;; Hardware stack levels required when called:    4
  3872 ;; This function calls:
  3873 ;;		Nothing
  3874 ;; This function is called by:
  3875 ;;		_main
  3876 ;;		_getch
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text29
  3881  000CEA                     __ptext29:
  3882                           	opt callstack 0
  3883  000CEA                     _EUSART1_Read:
  3884                           	opt callstack 26
  3885  000CEA                     l132:
  3886                           
  3887                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  3888  000CEA  AA9E               	btfss	158,5,c	;volatile
  3889  000CEC  EF7A  F006         	goto	u841
  3890  000CF0  EF7C  F006         	goto	u840
  3891  000CF4                     u841:
  3892  000CF4  EF75  F006         	goto	l132
  3893  000CF8                     u840:
  3894  000CF8                     
  3895                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  3896  000CF8  0E00               	movlw	0
  3897  000CFA  6E55               	movwf	_eusart1RxLastError^0,c	;volatile
  3898  000CFC                     
  3899                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  3900  000CFC  A2AB               	btfss	171,1,c	;volatile
  3901  000CFE  EF83  F006         	goto	u851
  3902  000D02  EF85  F006         	goto	u850
  3903  000D06                     u851:
  3904  000D06  EF87  F006         	goto	l2067
  3905  000D0A                     u850:
  3906  000D0A                     
  3907                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  3908  000D0A  98AB               	bcf	171,4,c	;volatile
  3909                           
  3910                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  3911  000D0C  88AB               	bsf	171,4,c	;volatile
  3912  000D0E                     l2067:
  3913                           
  3914                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  3915  000D0E  50AE               	movf	174,w,c	;volatile
  3916  000D10  0012               	return		;funcret
  3917  000D12                     __end_of_EUSART1_Read:
  3918                           	opt callstack 0
  3919                           
  3920 ;; *************** function _EPWM2_LoadDutyValue *****************
  3921 ;; Defined at:
  3922 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;  dutyValue       2    6[COMRAM] unsigned short 
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;		None
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  1    wreg      void 
  3929 ;; Registers used:
  3930 ;;		wreg, status,2, status,0
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3938 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3939 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3940 ;;Total ram usage:        4 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:    4
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		_main
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text30
  3951  000C34                     __ptext30:
  3952                           	opt callstack 0
  3953  000C34                     _EPWM2_LoadDutyValue:
  3954                           	opt callstack 26
  3955  000C34                     
  3956                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
  3957  000C34  C007  F009         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3958  000C38  C008  F00A         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  3959  000C3C  90D8               	bcf	status,0,c
  3960  000C3E  320A               	rrcf	(??_EPWM2_LoadDutyValue+1)^0,f,c
  3961  000C40  3209               	rrcf	??_EPWM2_LoadDutyValue^0,f,c
  3962  000C42  90D8               	bcf	status,0,c
  3963  000C44  320A               	rrcf	(??_EPWM2_LoadDutyValue+1)^0,f,c
  3964  000C46  3209               	rrcf	??_EPWM2_LoadDutyValue^0,f,c
  3965  000C48  5009               	movf	??_EPWM2_LoadDutyValue^0,w,c
  3966  000C4A  6E67               	movwf	103,c	;volatile
  3967                           
  3968                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  3969  000C4C  C007  F009         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3970  000C50  0E03               	movlw	3
  3971  000C52  1609               	andwf	??_EPWM2_LoadDutyValue^0,f,c
  3972  000C54  3A09               	swapf	??_EPWM2_LoadDutyValue^0,f,c
  3973  000C56  0EF0               	movlw	240
  3974  000C58  1609               	andwf	??_EPWM2_LoadDutyValue^0,f,c
  3975  000C5A  5066               	movf	102,w,c	;volatile
  3976  000C5C  0BCF               	andlw	207
  3977  000C5E  1009               	iorwf	??_EPWM2_LoadDutyValue^0,w,c
  3978  000C60  6E66               	movwf	102,c	;volatile
  3979  000C62  0012               	return		;funcret
  3980  000C64                     __end_of_EPWM2_LoadDutyValue:
  3981                           	opt callstack 0
  3982                           
  3983 ;; *************** function _EPWM1_LoadDutyValue *****************
  3984 ;; Defined at:
  3985 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  dutyValue       2    6[COMRAM] unsigned short 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;		None
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      void 
  3992 ;; Registers used:
  3993 ;;		wreg, status,2, status,0
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;Total ram usage:        4 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; Hardware stack levels required when called:    4
  4006 ;; This function calls:
  4007 ;;		Nothing
  4008 ;; This function is called by:
  4009 ;;		_main
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text31
  4014  000C64                     __ptext31:
  4015                           	opt callstack 0
  4016  000C64                     _EPWM1_LoadDutyValue:
  4017                           	opt callstack 26
  4018  000C64                     
  4019                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  4020  000C64  C007  F009         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  4021  000C68  C008  F00A         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  4022  000C6C  90D8               	bcf	status,0,c
  4023  000C6E  320A               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  4024  000C70  3209               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  4025  000C72  90D8               	bcf	status,0,c
  4026  000C74  320A               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  4027  000C76  3209               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  4028  000C78  5009               	movf	??_EPWM1_LoadDutyValue^0,w,c
  4029  000C7A  6EBE               	movwf	190,c	;volatile
  4030                           
  4031                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  4032  000C7C  C007  F009         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  4033  000C80  0E03               	movlw	3
  4034  000C82  1609               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  4035  000C84  3A09               	swapf	??_EPWM1_LoadDutyValue^0,f,c
  4036  000C86  0EF0               	movlw	240
  4037  000C88  1609               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  4038  000C8A  50BD               	movf	189,w,c	;volatile
  4039  000C8C  0BCF               	andlw	207
  4040  000C8E  1009               	iorwf	??_EPWM1_LoadDutyValue^0,w,c
  4041  000C90  6EBD               	movwf	189,c	;volatile
  4042  000C92  0012               	return		;funcret
  4043  000C94                     __end_of_EPWM1_LoadDutyValue:
  4044                           	opt callstack 0
  4045                           
  4046 ;; *************** function _INTERRUPT_InterruptManager *****************
  4047 ;; Defined at:
  4048 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;		None
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;		None
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  1    wreg      void 
  4055 ;; Registers used:
  4056 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4065 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;Total ram usage:        2 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; Hardware stack levels required when called:    3
  4069 ;; This function calls:
  4070 ;;		_TMR0_ISR
  4071 ;; This function is called by:
  4072 ;;		Interrupt level 2
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           	psect	intcode
  4077  000008                     __pintcode:
  4078                           	opt callstack 0
  4079  000008                     _INTERRUPT_InterruptManager:
  4080                           	opt callstack 18
  4081                           
  4082                           ;incstack = 0
  4083  000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4084  00000A  CFFA F005          	movff	pclath,??_INTERRUPT_InterruptManager
  4085  00000E  CFFB F006          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4086  000012                     
  4087                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4088  000012  AAF2               	btfss	242,5,c	;volatile
  4089  000014  EF0E  F000         	goto	i2u93_41
  4090  000018  EF10  F000         	goto	i2u93_40
  4091  00001C                     i2u93_41:
  4092  00001C  EF19  F000         	goto	i2l419
  4093  000020                     i2u93_40:
  4094  000020  A4F2               	btfss	242,2,c	;volatile
  4095  000022  EF15  F000         	goto	i2u94_41
  4096  000026  EF17  F000         	goto	i2u94_40
  4097  00002A                     i2u94_41:
  4098  00002A  EF19  F000         	goto	i2l419
  4099  00002E                     i2u94_40:
  4100  00002E                     
  4101                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  4102  00002E  ECC9  F005         	call	_TMR0_ISR	;wreg free
  4103  000032                     i2l419:
  4104  000032  C006  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4105  000036  C005  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4106  00003A  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4107  00003C  0011               	retfie		f
  4108  00003E                     __end_of_INTERRUPT_InterruptManager:
  4109                           	opt callstack 0
  4110                           
  4111 ;; *************** function _TMR0_ISR *****************
  4112 ;; Defined at:
  4113 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;		None
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;		None
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  1    wreg      void 
  4120 ;; Registers used:
  4121 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;Total ram usage:        0 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; Hardware stack levels required when called:    2
  4134 ;; This function calls:
  4135 ;;		Absolute function
  4136 ;;		_TMR0_DefaultInterruptHandler
  4137 ;;		_myTMR0ISR
  4138 ;; This function is called by:
  4139 ;;		_INTERRUPT_InterruptManager
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text33
  4144  000B92                     __ptext33:
  4145                           	opt callstack 0
  4146  000B92                     _TMR0_ISR:
  4147                           	opt callstack 18
  4148  000B92                     
  4149                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  4150  000B92  94F2               	bcf	242,2,c	;volatile
  4151  000B94                     
  4152                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  4153  000B94  5057               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  4154  000B96  6ED7               	movwf	215,c	;volatile
  4155  000B98                     
  4156                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  4157  000B98  C056  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  4158  000B9C                     
  4159                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  4160  000B9C  0100               	movlb	0	; () banked
  4161  000B9E  51A6               	movf	_TMR0_InterruptHandler& (0+255),w,b
  4162  000BA0  11A7               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  4163  000BA2  B4D8               	btfsc	status,2,c
  4164  000BA4  EFD6  F005         	goto	i2u86_41
  4165  000BA8  EFD8  F005         	goto	i2u86_40
  4166  000BAC                     i2u86_41:
  4167  000BAC  EFE4  F005         	goto	i2l266
  4168  000BB0                     i2u86_40:
  4169  000BB0                     
  4170                           ; BSR set to: 0
  4171                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  4172  000BB0  D802               	call	i2u87_48
  4173  000BB2  EFE4  F005         	goto	i2u87_49
  4174  000BB6                     i2u87_48:
  4175  000BB6  0005               	push	
  4176  000BB8  6EFA               	movwf	pclath,c
  4177  000BBA  51A6               	movf	_TMR0_InterruptHandler& (0+255),w,b
  4178  000BBC  6EFD               	movwf	tosl,c
  4179  000BBE  51A7               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  4180  000BC0  6EFE               	movwf	tosh,c
  4181  000BC2  6AFF               	clrf	tosu,c
  4182  000BC4  50FA               	movf	pclath,w,c
  4183  000BC6  0012               	return		;indir
  4184  000BC8                     i2u87_49:
  4185  000BC8                     i2l266:
  4186  000BC8  0012               	return		;funcret
  4187  000BCA                     __end_of_TMR0_ISR:
  4188                           	opt callstack 0
  4189                           
  4190 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4191 ;; Defined at:
  4192 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;		None
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;		None
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  1    wreg      void 
  4199 ;; Registers used:
  4200 ;;		None
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4210 ;;Total ram usage:        0 bytes
  4211 ;; Hardware stack levels used:    1
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		_TMR0_Initialize
  4216 ;;		_TMR0_ISR
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text34
  4221  000E3A                     __ptext34:
  4222                           	opt callstack 0
  4223  000E3A                     _TMR0_DefaultInterruptHandler:
  4224                           	opt callstack 19
  4225  000E3A  0012               	return		;funcret
  4226  000E3C                     __end_of_TMR0_DefaultInterruptHandler:
  4227                           	opt callstack 0
  4228                           
  4229 ;; *************** function _myTMR0ISR *****************
  4230 ;; Defined at:
  4231 ;;		line 134 in file "main.c"
  4232 ;; Parameters:    Size  Location     Type
  4233 ;;		None
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      void 
  4238 ;; Registers used:
  4239 ;;		wreg, status,2, status,0, cstack
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4249 ;;Total ram usage:        2 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    1
  4252 ;; This function calls:
  4253 ;;		_TMR0_WriteTimer
  4254 ;; This function is called by:
  4255 ;;		_main
  4256 ;;		_TMR0_ISR
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text35
  4261  00090E                     __ptext35:
  4262                           	opt callstack 0
  4263  00090E                     _myTMR0ISR:
  4264                           	opt callstack 18
  4265  00090E                     
  4266                           ;main.c: 136: 
  4267  00090E  EFC3  F004         	goto	i2l2037
  4268  000912                     i2l393:
  4269  000912  8A89               	bsf	137,5,c	;volatile
  4270  000914  0E01               	movlw	1
  4271  000916  6E54               	movwf	_TMR0ISRstate^0,c
  4272  000918                     i2l2019:
  4273  000918  0EFF               	movlw	255
  4274  00091A  6E02               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  4275  00091C  0EF6               	movlw	246
  4276  00091E  6E01               	movwf	TMR0_WriteTimer@timerVal^0,c
  4277  000920  EC16  F007         	call	_TMR0_WriteTimer	;wreg free
  4278  000924  EFDC  F004         	goto	i2l395
  4279  000928                     i2l397:
  4280  000928  9A89               	bcf	137,5,c	;volatile
  4281  00092A  0E0A               	movlw	10
  4282  00092C  0100               	movlb	0	; () banked
  4283  00092E  2768               	addwf	_microSecondDelay& (0+255),f,b
  4284  000930  0E00               	movlw	0
  4285  000932  2369               	addwfc	(_microSecondDelay+1)& (0+255),f,b
  4286  000934                     
  4287                           ; BSR set to: 0
  4288  000934  B680               	btfsc	128,3,c	;volatile
  4289  000936  EF9F  F004         	goto	i2u80_41
  4290  00093A  EFA1  F004         	goto	i2u80_40
  4291  00093E                     i2u80_41:
  4292  00093E  EFAC  F004         	goto	i2l2027
  4293  000942                     i2u80_40:
  4294  000942                     
  4295                           ; BSR set to: 0
  4296  000942  0ECD               	movlw	205
  4297  000944  5D68               	subwf	_microSecondDelay& (0+255),w,b
  4298  000946  0E5B               	movlw	91
  4299  000948  5969               	subwfb	(_microSecondDelay+1)& (0+255),w,b
  4300  00094A  A0D8               	btfss	status,0,c
  4301  00094C  EFAA  F004         	goto	i2u81_41
  4302  000950  EFAC  F004         	goto	i2u81_40
  4303  000954                     i2u81_41:
  4304  000954  EF8C  F004         	goto	i2l2019
  4305  000958                     i2u81_40:
  4306  000958                     i2l2027:
  4307                           
  4308                           ; BSR set to: 0
  4309  000958  0E02               	movlw	2
  4310  00095A  6E54               	movwf	_TMR0ISRstate^0,c
  4311  00095C  EF8C  F004         	goto	i2l2019
  4312  000960                     i2l402:
  4313  000960  C068  F066         	movff	_microSecondDelay,_distance
  4314  000964  C069  F067         	movff	_microSecondDelay+1,_distance+1
  4315  000968  0E00               	movlw	0
  4316  00096A  0100               	movlb	0	; () banked
  4317  00096C  6F69               	movwf	(_microSecondDelay+1)& (0+255),b
  4318  00096E  0E00               	movlw	0
  4319  000970  6F68               	movwf	_microSecondDelay& (0+255),b
  4320  000972  0E00               	movlw	0
  4321  000974  6E54               	movwf	_TMR0ISRstate^0,c
  4322  000976                     
  4323                           ; BSR set to: 0
  4324  000976  0E8A               	movlw	138
  4325  000978  6E02               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  4326  00097A  0ED0               	movlw	208
  4327  00097C  6E01               	movwf	TMR0_WriteTimer@timerVal^0,c
  4328  00097E  EC16  F007         	call	_TMR0_WriteTimer	;wreg free
  4329  000982  EFDC  F004         	goto	i2l395
  4330  000986                     i2l2037:
  4331  000986  5054               	movf	_TMR0ISRstate^0,w,c
  4332  000988  6E03               	movwf	??_myTMR0ISR^0,c
  4333  00098A  6A04               	clrf	(??_myTMR0ISR+1)^0,c
  4334                           
  4335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4336                           ; Switch size 1, requested type "simple"
  4337                           ; Number of cases is 1, Range of values is 0 to 0
  4338                           ; switch strategies available:
  4339                           ; Name         Instructions Cycles
  4340                           ; simple_byte            4     3 (average)
  4341                           ;	Chosen strategy is simple_byte
  4342  00098C  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  4343  00098E  0A00               	xorlw	0	; case 0
  4344  000990  B4D8               	btfsc	status,2,c
  4345  000992  EFCD  F004         	goto	i2l2611
  4346  000996  EFDC  F004         	goto	i2l395
  4347  00099A                     i2l2611:
  4348                           
  4349                           ; Switch size 1, requested type "simple"
  4350                           ; Number of cases is 3, Range of values is 0 to 2
  4351                           ; switch strategies available:
  4352                           ; Name         Instructions Cycles
  4353                           ; simple_byte           10     6 (average)
  4354                           ;	Chosen strategy is simple_byte
  4355  00099A  5003               	movf	??_myTMR0ISR^0,w,c
  4356  00099C  0A00               	xorlw	0	; case 0
  4357  00099E  B4D8               	btfsc	status,2,c
  4358  0009A0  EF89  F004         	goto	i2l393
  4359  0009A4  0A01               	xorlw	1	; case 1
  4360  0009A6  B4D8               	btfsc	status,2,c
  4361  0009A8  EF94  F004         	goto	i2l397
  4362  0009AC  0A03               	xorlw	3	; case 2
  4363  0009AE  B4D8               	btfsc	status,2,c
  4364  0009B0  EFB0  F004         	goto	i2l402
  4365  0009B4  EFDC  F004         	goto	i2l395
  4366  0009B8                     i2l395:
  4367  0009B8  94F2               	bcf	242,2,c	;volatile
  4368  0009BA  0012               	return		;funcret
  4369  0009BC                     __end_of_myTMR0ISR:
  4370                           	opt callstack 0
  4371                           
  4372 ;; *************** function _TMR0_WriteTimer *****************
  4373 ;; Defined at:
  4374 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  timerVal        2    0[COMRAM] unsigned short 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;		None
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      void 
  4381 ;; Registers used:
  4382 ;;		wreg, status,2
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4391 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4392 ;;Total ram usage:        2 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; This function calls:
  4395 ;;		Nothing
  4396 ;; This function is called by:
  4397 ;;		_myTMR0ISR
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           	psect	text36
  4402  000E2C                     __ptext36:
  4403                           	opt callstack 0
  4404  000E2C                     _TMR0_WriteTimer:
  4405                           	opt callstack 18
  4406  000E2C                     
  4407                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4408  000E2C  5002               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4409  000E2E  6ED7               	movwf	215,c	;volatile
  4410  000E30                     
  4411                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4412  000E30  C001  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4413  000E34  0012               	return		;funcret
  4414  000E36                     __end_of_TMR0_WriteTimer:
  4415                           	opt callstack 0
  4416                           
  4417                           	psect	text37
  4418  000000                     __ptext37:
  4419                           	opt callstack 0
  4420  000000                     
  4421                           	psect	rparam
  4422  0000                     
  4423                           	psect	temp
  4424  000058                     btemp:
  4425                           	opt callstack 0
  4426  000058                     	ds	1
  4427  0000                     int$flags	set	btemp
  4428  0000                     wtemp8	set	btemp+1
  4429  0000                     ttemp5	set	btemp+1
  4430  0000                     ttemp6	set	btemp+4
  4431  0000                     ttemp7	set	btemp+8
  4432                           tosu	equ	0xFFF
  4433                           tosh	equ	0xFFE
  4434                           tosl	equ	0xFFD
  4435                           stkptr	equ	0xFFC
  4436                           pclatu	equ	0xFFB
  4437                           pclath	equ	0xFFA
  4438                           pcl	equ	0xFF9
  4439                           tblptru	equ	0xFF8
  4440                           tblptrh	equ	0xFF7
  4441                           tblptrl	equ	0xFF6
  4442                           tablat	equ	0xFF5
  4443                           prodh	equ	0xFF4
  4444                           prodl	equ	0xFF3
  4445                           indf0	equ	0xFEF
  4446                           postinc0	equ	0xFEE
  4447                           postdec0	equ	0xFED
  4448                           preinc0	equ	0xFEC
  4449                           plusw0	equ	0xFEB
  4450                           fsr0h	equ	0xFEA
  4451                           fsr0l	equ	0xFE9
  4452                           wreg	equ	0xFE8
  4453                           indf1	equ	0xFE7
  4454                           postinc1	equ	0xFE6
  4455                           postdec1	equ	0xFE5
  4456                           preinc1	equ	0xFE4
  4457                           plusw1	equ	0xFE3
  4458                           fsr1h	equ	0xFE2
  4459                           fsr1l	equ	0xFE1
  4460                           bsr	equ	0xFE0
  4461                           indf2	equ	0xFDF
  4462                           postinc2	equ	0xFDE
  4463                           postdec2	equ	0xFDD
  4464                           preinc2	equ	0xFDC
  4465                           plusw2	equ	0xFDB
  4466                           fsr2h	equ	0xFDA
  4467                           fsr2l	equ	0xFD9
  4468                           status	equ	0xFD8


Data Sizes:
    Strings     352
    Constant    0
    Data        0
    BSS         46
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      87
    BANK0           160     26      78
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_19(CODE[17]), STR_18(CODE[32]), STR_17(CODE[21]), STR_16(CODE[22]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[13]), STR_12(CODE[52]), 
		 -> STR_11(CODE[29]), STR_10(CODE[20]), STR_9(CODE[25]), STR_8(CODE[22]), 
		 -> STR_7(CODE[7]), STR_6(CODE[15]), STR_5(CODE[52]), STR_4(CODE[5]), 
		 -> STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[20]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1775_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_19(CODE[17]), STR_18(CODE[32]), STR_17(CODE[21]), STR_16(CODE[22]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[13]), STR_12(CODE[52]), 
		 -> STR_11(CODE[29]), STR_10(CODE[20]), STR_9(CODE[25]), STR_8(CODE[22]), 
		 -> STR_7(CODE[7]), STR_6(CODE[15]), STR_5(CODE[52]), STR_4(CODE[5]), 
		 -> STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 52
		 -> STR_19(CODE[17]), STR_18(CODE[32]), STR_17(CODE[21]), STR_16(CODE[22]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[13]), STR_12(CODE[52]), 
		 -> STR_11(CODE[29]), STR_10(CODE[20]), STR_9(CODE[25]), STR_8(CODE[22]), 
		 -> STR_7(CODE[7]), STR_6(CODE[15]), STR_5(CODE[52]), STR_4(CODE[5]), 
		 -> STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->_TMR0_WriteTimer

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   14363
                                             79 COMRAM     2     2      0
                                             23 BANK0      3     3      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   13088
                                             15 BANK0      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11291
                                             77 COMRAM     2     2      0
                                              9 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   10812
                                             67 COMRAM    10     4      6
                                              0 BANK0      9     9      0
                               _ctoa
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    5037
                                             35 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              6 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              6 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    3904
                                             35 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3625
                                             24 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1506
                                             17 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1006
                                              8 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                              7 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                              8 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM2_LoadDutyValue                                  4     2      2     196
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     196
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0     272
                                              4 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     272
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _myTMR0ISR                                           2     2      0     272
                                              2 COMRAM     2     2      0
                    _TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR0_WriteTimer                                     2     0      2     272
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _EPWM2_LoadDutyValue
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
   _TMR0_SetInterruptHandler
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _TMR0_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1A      4E       5       48.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      57       1       92.6%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A5      12        0.0%
DATA                 0      0      A5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Apr 16 12:53:01 2020

                  __size_of_EPWM2_LoadDutyValue 0030                                              l13 0DEA  
                                            l52 0C92                                              l72 0C62  
                                            l49 0D76                                              l69 0D56  
                               _timer0ReloadVal 0056                                    __CFG_CP0$OFF 000000  
                                  __CFG_CP1$OFF 000000                                    __CFG_CP2$OFF 000000  
                                  __CFG_CP3$OFF 000000                                     __CFG_LVP$ON 000000  
                                           l123 0DDA                                             l115 0B90  
                                           l132 0CEA                                             l142 0DC6  
                                           l223 0CC0                                             l136 0D10  
                                           l160 0E20                                             l163 0E16  
                                           l139 0DB4                                             l412 0E38  
                                           l148 0E02                                             l166 0E2A  
                                           l247 0C32                                             l193 0D36  
                                           l196 0DF8                                             l444 088E  
                                           l269 0E0C                                             l293 0DB0  
                                           l461 04BE                                             l366 0170  
                                           l447 08D0                                             l471 0686  
                                           l463 04C6                                             l456 0B0E  
                                           l449 090C                                             l483 0AAC  
                                           l476 0484                                             l484 0AB4  
                                           l932 0776                                             l925 0756  
                                           l942 0846                                             l935 0826  
                                  __CFG_CPB$OFF 000000                                             _PR2 000FBB  
                                  __CFG_CPD$OFF 000000                                             u830 0DD8  
                                           u831 0DD2                                             u840 0CF8  
                                           u841 0CF4                                             u850 0D0A  
                                           u851 0D06                                             u836 0DDA  
                                           u950 0DC2                                             u951 0DBE  
                                           u960 09CE                                             u961 09CA  
                                           u970 09E0                                             u971 09DC  
                                           u980 0A08                                             u981 0A04  
                                           u990 0A3E                                             u991 0A3A  
                               _timer1ReloadVal 00A4                                             _pad 0848  
                               _TMR2_Initialize 0DDC                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                      __end_of_EPWM2_Initialize 0D58                                            l2001 0C00  
                                          l2011 0C22                                            l2003 0C04  
                                          l2013 0C2E                                            l2005 0C08  
                                          l2007 0C1E                                            l2009 0C20  
                                          l1170 0A50                                            l2051 0C64  
                                          l2053 0C34                                            l2061 0CF8  
                                          l2063 0CFC                                            l2055 0DC8  
                                          l2071 0D12                                            l1191 0BFE  
                                          l2311 0886                                            l2303 0848  
                                          l2065 0D0A                                            l2081 0D26  
                                          l2073 0D16                                            l2321 08F4  
                                          l2313 089A                                            l2305 0858  
                                          l2401 05FC                                            l1185 0CE8  
                                          l1178 0B52                                            l2067 0D0E  
                                          l2059 0CEA                                            l2083 0D2A  
                                          l2075 0D1A                                            l2315 08AE  
                                          l2307 086C                                            l2331 06BA  
                                          l2403 061A                                            l2085 0D2E  
                                          l2077 0D1E                                            l2317 08B2  
                                          l2309 087A                                            l2341 073C  
                                          l2333 06CE                                            l2325 0688  
                                          l2405 0634                                            l2421 02C2  
                                          l2413 0278                                            l2501 00BE  
                                          l2087 0D32                                            l2079 0D22  
                                          l2271 09BC                                            l2319 08E0  
                                          l2343 073E                                            l2335 06DC  
                                          l2327 0694                                            l2351 079E  
                                          l2407 064E                                            l2431 035C  
                                          l2423 02E8                                            l2415 029E  
                                          l2503 00CA                                            l2265 0DB4  
                                          l2281 0A3E                                            l2273 09CE  
                                          l2345 0750                                            l2337 06EE  
                                          l2329 06B2                                            l2361 0820  
                                          l2353 07B2                                            l2409 065E  
                                          l2441 0412                                            l2433 03A6  
                                          l2425 031A                                            l2417 02AC  
                                          l2513 0150                                            l2505 013C  
                                          l2267 0DC2                                            l2275 09E0  
                                          l2291 0B32                                            l2371 0AE4  
                                          l2363 0AB6                                            l2339 071C  
                                          l2355 07C0                                            l2347 0778  
                                          l2443 0426                                            l2419 02BC  
                                          l2531 019E                                            l2515 015C  
                                          l2507 014C                                            l2269 0DFC  
                                          l2277 09EA                                            l2285 0B10  
                                          l2293 0BCA                                            l2373 0AEA  
                                          l2365 0AC8                                            l2357 07EE  
                                          l2349 0796                                            l2381 0498  
                                          l2437 03DE                                            l2429 0336  
                                          l2453 044C                                            l2461 0A52  
                                          l2541 01C8                                            l2533 01AE  
                                          l2525 017A                                            l2517 0160  
                                          l1911 0E0E                                            l2279 0A08  
                                          l2287 0B1C                                            l2295 0BD6  
                                          l2367 0AD4                                            l2359 080E  
                                          l2391 0504                                            l2383 04B2  
                                          l2455 0472                                            l2439 0404  
                                          l2447 0432                                            l2463 0A5A  
                                          l2471 0CCC                                            l2551 01D2  
                                          l2543 01CA                                            l2535 01B2  
                                          l2527 0186                                            l2519 0176  
                                          l1913 0E22                                            l2289 0B2E  
                                          l2297 0BDA                                            l2369 0AE0  
                                          l2393 057A                                            l2385 04EE  
                                          l2377 0486                                            l2449 0440  
                                          l2465 0A68                                            l2609 023E  
                                          l2553 01DE                                            l2545 01CC  
                                          l2537 01B4                                            l2529 018A  
                                          l2481 004E                                            l1915 0E04  
                                          l2299 0BF2                                            l2395 0580  
                                          l2387 04F6                                            l2379 0496  
                                          l2467 0A8E                                            l2555 01EA  
                                          l2547 01CE                                            l2539 01C4  
                                          l2563 022A                                            l2491 008C  
                                          l2483 0058                                            l2475 0042  
                                          l1909 0E18                                            l2397 0586  
                                          l2389 04FE                                            l2469 0CC2  
                                          l2557 01FC                                            l2549 01D0  
                                          l2493 009A                                            l2485 0062  
                                          l2477 0048                                            l2399 05EA  
                                          l2559 0214                                            l2495 00A6  
                                          l2487 0070                                            l2479 004C  
                                          l2497 00A8                                            l2489 007E  
                                          l1971 0DE4                                            l2499 00AA  
                                          l1973 0D58                                            l1981 0B74  
                                          ?_pad 0019                                            l1975 0D38  
                                          l1983 0B80                                            l1991 0CBE  
                                          l1985 0B8C                                            l1977 0B54  
                                          l1993 0DEC                                            l1969 0DDC  
                                          l1979 0B68                                            l1987 0E36  
                                          l1995 0D96                                            l1989 0C94  
                                          l1997 0DA2                                            l1999 0DAA  
                                          STR_1 FFB2                                            STR_2 FF2A  
                                          STR_3 FF10                                            STR_4 FFFA  
                                          STR_5 FE9F                                            STR_6 FFD7  
                                          STR_7 FFF3                                            STR_8 FF73  
                                          STR_9 FF44                                            u1000 0B52  
                                          u1001 0B4E                                            u1010 0BF2  
                                          u1011 0BEE                                            u1020 0858  
                                          u1100 0796                                            u1021 0854  
                                          u1101 0792                                            u1030 087A  
                                          u1110 07C0                                            u1031 0876  
                                          u1111 07BC                                            u1040 08D0  
                                          u1120 07EE                                            u1200 065E  
                                          u1041 08CC                                            u1121 07EA  
                                          u1201 065A                                            u1050 08E0  
                                          u1130 0AC8                                            u1210 029E  
                                          u1051 08DC                                            u1131 0AC4  
                                          u1211 029A                                            u1140 0496  
                                          u1220 02E8                                            u1061 068E  
                                          u1141 0492                                            u1221 02E4  
                                          u1070 06B2                                            u1150 04B2  
                                          u1230 035C                                            u1071 06AE  
                                          u1151 04AE                                            u1231 0358  
                                          u1080 06DC                                            u1160 05FC  
                                          u1240 0404                                            u1081 06D8  
                                          u1161 05F8                                            u1241 0400  
                                          u1090 071C                                            u1170 061A  
                                          u1250 0AAC                                            u1091 0718  
                                          u1171 0616                                            u1251 0AA8  
                                          u1180 0634                                            u1260 00BE  
                                          u1181 0630                                            u1261 00BA  
                                          _LATA 000F89                                            u1190 064E  
                                          u1270 0170                                            _LATB 000F8A  
                                          u1191 064A                                            u1271 016C  
                                          _LATC 000F8B                                            u1280 019A  
                                          u1281 0196                                            u1290 01AE  
                                          u1291 01AA                                            _TMR1 000FCE  
                                          _TMR2 000FBC                                            _WPUB 000F61  
                                 _EUSART1_Write 0DB2                                            _dbuf 006A  
                                          _ctoa 0AB6                                            _main 0042  
                                 ?_EUSART1_Read 0001                                            _prec 0062  
                                          _nout 0060                                            pad@i 0020  
                                          pad@p 001D                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0022  
                                          fsr2l 000FD9                                            btemp 0058  
                                          _utoa 0486                                   __CFG_BORV$190 000000  
                                          start 003E                                   __CFG_IESO$OFF 000000  
                         ??_EPWM1_LoadDutyValue 0009                                    ___param_bank 000000  
                                         ??_pad 001F                         __end_of_TMR0_Initialize 0C34  
                ??_TMR0_DefaultInterruptHandler 0001                  __size_of_OSCILLATOR_Initialize 000E  
                 __end_of_OSCILLATOR_Initialize 0DFA                                           ?_ctoa 0024  
                                         ?_main 0001                                           STR_10 FF9E  
                                         STR_11 FEF3                                           STR_12 FE9F  
                                         STR_13 FFE6                                           STR_14 FF28  
                                         STR_15 FF28                                           STR_16 FF5D  
                                         STR_17 FF89                                           STR_18 FED3  
                                         STR_19 FFC6                                           ?_utoa 0024  
                                         _T0CON 000FD5                                 __end_of___lodiv 0778  
                                         _T1CON 000FCD                                           _T2CON 000FBA  
                               __end_of___lomod 0848                                  __CFG_DEBUG$OFF 000000  
                                         i2l402 0960                                           i2l403 09BA  
                               _TMR0_WriteTimer 0E2C                                           i2l272 0E3A  
                                         i2l266 0BC8                                           i2l259 0E34  
                                         i2l419 0032                                           i2l393 0912  
                                         i2l395 09B8                                           i2l397 0928  
                                  vfpfcnvrt@fmt 0046                                           _TMR0H 000FD7  
                                  vfpfcnvrt@llu 008A                                           _TMR1H 000FCF  
                                         _TMR0L 000FD6                                           _TMR1L 000FCE  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94               __size_of_TMR0_SetInterruptHandler 000A  
                                 __CFG_WRT0$OFF 000000                                   __CFG_WRT1$OFF 000000  
                                 __CFG_WRT2$OFF 000000                       ?_TMR0_SetInterruptHandler 0007  
                                 __CFG_WRT3$OFF 000000                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                              __end_of_TMR0_ISR 0BCA                                   __CFG_WRTB$OFF 000000  
                                 __CFG_WRTC$OFF 000000                                   __CFG_WRTD$OFF 000000  
                                __CFG_EBTRB$OFF 000000                                           _flags 0064  
                                         _fputc 09BC                                           _fputs 0B10  
                            __CFG_MCLRE$EXTMCLR 000000                                           pad@fp 0019  
                                         _width 0052                                           ctoa@c 0026  
                                         _putch 0DFA                                           ctoa@w 0027  
                                         main@i 00A3                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 0DB2                                           pclath 000FFA  
                                         tablat 000FF5                                  ??_EUSART1_Read 0007  
                                         ttemp5 0059                                           ttemp6 005C  
                                         ttemp7 0060                                           utoa@d 0026  
                                         utoa@i 0042                                           utoa@n 003A  
                                         utoa@p 0036                                           utoa@w 0038  
                                         status 000FD8                                           wtemp8 0059  
                                __CFG_HFOFST$ON 000000                                ___lodiv@dividend 0007  
            _EUSART1_DefaultFramingErrorHandler 000000                                  __CFG_PBADEN$ON 000000  
                               __initialization 0D78                                    __end_of_ctoa 0B10  
                    __end_of_EUSART1_Initialize 0B92                                    __end_of_main 0278  
                                  __end_of_utoa 0688                         __end_of_TMR2_Initialize 0DEC  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_ctoa 0027  
                                        ??_main 0050                                          ??_utoa 002E  
                                 __activetblptr 000003                                ___lodiv@quotient 0017  
                                        ?_fputc 0009                                          ?_fputs 0012  
                                        _CCPR1H 000FBF                                          _CCPR2H 000F68  
                                        _CCPR1L 000FBE                                          _CCPR2L 000F67  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _T1GCON 000FCC                    __size_of_EUSART1_is_rx_ready 0014  
                                        i2l2021 092A                                          i2l2031 0968  
                                        i2l2023 0934                                          i2l2015 090E  
                                        i2l2033 0976                                          i2l2025 0942  
                                        i2l2017 0914                                          i2l2027 0958  
                                        i2l2019 0918                                          i2l2037 0986  
                                        i2l2221 0020                                          i2l2223 002E  
                                        i2l2091 0B94                                          i2l2219 0012  
                                        i2l2093 0B98                                          i2l2095 0B9C  
                                        i2l2097 0BB0                                          i2l2089 0B92  
                                        i2l2611 099A                                  __CFG_WDTEN$OFF 000000  
                                        i2l1917 0E2C                                          i2l1919 0E30  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                __CFG_XINST$OFF 000000                                    _CCPTMRS0bits 000F49  
                                  vfprintf@cfmt 004E                                  __CFG_STVREN$ON 000000  
                       __end_of_TMR0_WriteTimer 0E36                                       ??___lodiv 0017  
                                     ??___lomod 0017                        ?_EUSART1_SetErrorHandler 0007  
                              ?_TMR0_Initialize 0001                                          clear_0 0D7E  
                                        _printf 0CC2                                          pad@buf 001B  
              ??_EUSART1_SetOverrunErrorHandler 0009                 ?_EUSART1_SetOverrunErrorHandler 0007  
                                        ctoa@fp 0024                                          _strlen 0BCA  
                                        fputc@c 0009                                          fputs@c 0016  
                                        fputs@i 0017                                          fputs@s 0012  
                                  __mediumconst FE9E                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 0AB6                                 ??_EUSART1_Write 0007  
                           _EPWM2_LoadDutyValue 0C34                                          utoa@fp 0024  
      TMR0_SetInterruptHandler@InterruptHandler 0007                   __size_of_INTERRUPT_Initialize 0004  
                              ?_TMR1_Initialize 0001                               _SYSTEM_Initialize 0D12  
                                    __accesstop 0060                         __end_of__initialization 0D8C  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                             ?_EPWM1_Initialize 0001                                  __pcstackCOMRAM 0001  
                          ?_EPWM2_LoadDutyValue 0007                             ??_SYSTEM_Initialize 000B  
                                     ?_TMR0_ISR 0001                              ??_EPWM1_Initialize 0007  
                                 __end_of_fputc 0A52                                   __end_of_fputs 0B54  
                                 __end_of_putch 0E04                                ?_TMR2_Initialize 0001  
                          __end_of_EUSART1_Read 0D12                               ?_EPWM2_Initialize 0001  
                                       ??_fputc 000D                       __end_of_SYSTEM_Initialize 0D38  
                                       ??_fputs 0016                              __size_of_myTMR0ISR 00AE  
                            ??_EPWM2_Initialize 0007                                         ??_putch 0008  
                                    __pbssBANK0 0060                                 __CFG_PLLCFG$OFF 000000  
                                    __pnvCOMRAM 0056                 __end_of_EUSART1_SetErrorHandler 0E2C  
                            __CFG_CCP2MX$PORTC1 000000                           ??_EPWM2_LoadDutyValue 0009  
              __end_of_TMR0_SetInterruptHandler 0E0E                                      ??_TMR0_ISR 0005  
                            __CFG_CCP3MX$PORTB5 000000                                ?_TMR0_WriteTimer 0001  
                                       _CCP1CON 000FBD                                         _CCP2CON 000F66  
                                       _ECCP1AS 000FB6                                         _ECCP2AS 000F64  
                                       ?_printf 0099                                         ?_strlen 0007  
        __end_of_EUSART1_SetFramingErrorHandler 0E22         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 0E18                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 020E                                         _OSCTUNE 000F9B  
                                       _PWM1CON 000FB7                                         i2u80_40 0942  
                                       i2u80_41 093E                                         _PWM2CON 000F65  
                                       i2u81_40 0958                                         i2u81_41 0954  
                                       _SPBRGH1 000FB0                                         i2u93_40 0020  
                                       i2u93_41 001C                                         i2u86_40 0BB0  
                                       i2u94_40 002E                                         i2u86_41 0BAC  
                                       i2u94_41 002A                                         i2u87_48 0BB6  
                                       i2u87_49 0BC8                                ___lomod@dividend 0007  
                   __end_of_EPWM1_LoadDutyValue 0C94                                 __CFG_PWRTEN$OFF 000000  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___lodiv 0688                                         ___lomod 0778  
                             __end_of_myTMR0ISR 09BC                                       ?_vfprintf 0093  
                              _microSecondDelay 0068                             _EUSART1_is_rx_ready 0DC8  
                                       __pcinit 0D78                                         __ramtop 1000  
                                       __ptext0 0042                                         __ptext1 0CC2  
                                       __ptext2 0A52                                         __ptext3 0278  
                                       __ptext4 0486                                         __ptext5 0778  
                                       __ptext6 0688                                         __ptext7 0AB6  
                                       __ptext8 0848                                         __ptext9 0BCA  
                               __size_of_printf 0028                                       _T0CONbits 000FD5  
                               __size_of_strlen 0036                                       _T1CONbits 000FCD  
                         _OSCILLATOR_Initialize 0DEC                                       _T2CONbits 000FBA  
                                  __size_of_pad 00C6                              _EUSART1_Initialize 0B54  
                      ??_PIN_MANAGER_Initialize 0007                                         main@cmd 00A2  
                    __size_of_SYSTEM_Initialize 0026                            end_of_initialization 0D8C  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 000B                     _EUSART1_OverrunErrorHandler 00AA  
                                       fputs@fp 0014                               __end_of_vfpfcnvrt 0486  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0028                                      ??_vfprintf 004E  
                          ??_EUSART1_Initialize 0009                                         strlen@a 0009  
                                       strlen@s 0007                        _TMR0_SetInterruptHandler 0E04  
                                     _PORTAbits 000F80                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0007                           ??_EUSART1_is_rx_ready 0007  
                                  _EUSART1_Read 0CEA                    __end_of_INTERRUPT_Initialize 0E3A  
                                   vfpfcnvrt@ap 0048                                     vfpfcnvrt@fp 0044  
                             __size_of_TMR0_ISR 0038                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 0CEA                                  __end_of_strlen 0C00  
                           start_initialization 0D78                                 ___lodiv@divisor 000F  
                     __size_of_EPWM1_Initialize 0020                                 ___lodiv@counter 001F  
                             main@motorsToggled 00A1                        __size_of_TMR0_Initialize 0034  
               __size_of_PIN_MANAGER_Initialize 002E                                     __end_of_pad 090E  
                                   putch@txData 0008                    EPWM1_LoadDutyValue@dutyValue 0007  
                         __end_of_EUSART1_Write 0DC8                       __size_of_EPWM2_Initialize 0020  
                      __size_of_TMR1_Initialize 001C                                     vfprintf@fmt 0095  
                                      ??_printf 0050                                        ??_strlen 0009  
                                   __pbssCOMRAM 0052                                   __pcstackBANK0 008A  
                      __size_of_TMR2_Initialize 0010                ??_EUSART1_SetFramingErrorHandler 0009  
               ?_EUSART1_SetFramingErrorHandler 0007                     __end_of_EPWM2_LoadDutyValue 0C64  
                         _TMR0_InterruptHandler 00A6                                       __pnvBANK0 00A4  
                        _PIN_MANAGER_Initialize 0C94                                       __pintcode 0008  
                                 __pmediumconst FE9E                                        ?___lodiv 0007  
                                      ?___lomod 0007                    ??_INTERRUPT_InterruptManager 0005  
                              __CFG_PRICLKEN$ON 000000                               __size_of_vfprintf 0064  
                                     _myTMR0ISR 090E                                 ___lomod@divisor 000F  
                               ___lomod@counter 0017                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                        __size_of_TMR0_WriteTimer 000A  
                          _EUSART1_ErrorHandler 00A8                         _EUSART1_SetErrorHandler 0E22  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 0E36  
                             ??_TMR0_Initialize 0009                                        _LATAbits 000F89  
       EUSART1_SetErrorHandler@interruptHandler 0007                                        _LATBbits 000F8A  
           __size_of_INTERRUPT_InterruptManager 0036                      ??_TMR0_SetInterruptHandler 0009  
                                      _PIR1bits 000F9E                    __size_of_EPWM1_LoadDutyValue 0030  
                                      _RCONbits 000FD0                                __CFG_WDTPS$32768 000000  
                                      _TMR0_ISR 0B92                                        _PSTR1CON 000FB9  
                                      _PSTR2CON 000F63                                       _vfpfcnvrt 0278  
                             ??_TMR1_Initialize 0007                                      ?_myTMR0ISR 0001  
                              _EPWM1_Initialize 0D58                                      vfpfcnvrt@c 0092  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                             ??_TMR2_Initialize 0007                                        __Hrparam 0000  
                              _EPWM2_Initialize 0D38                                      vfprintf@ap 0097  
                                      __Lrparam 0000                                      vfprintf@fp 0093  
                            __CFG_BOREN$SBORDIS 000000                               __CFG_P2BMX$PORTB5 000000  
                       ??_OSCILLATOR_Initialize 0007                                __size_of___lodiv 00F0  
                   __size_of_EUSART1_Initialize 003E                                __size_of___lomod 00D0  
                                    ?_vfpfcnvrt 0044                                    _TMR0ISRstate 0054  
                     ??_EUSART1_SetErrorHandler 0009                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 0DDC                                        __ptext10 0B10  
                                      __ptext11 09BC                                        __ptext20 0DEC  
                                      __ptext12 0DFA                                        __ptext21 0E36  
                                      __ptext13 0DB2                                      _T1GCONbits 000FCC  
                                      __ptext30 0C34                                        __ptext22 0B54  
                                      __ptext14 0D12                                        __ptext31 0C64  
                                      __ptext23 0E0E                                        __ptext15 0DDC  
                                      __ptext24 0E18                                        __ptext16 0D96  
                                      __ptext33 0B92                                        __ptext25 0E22  
                                      __ptext17 0C00                                        __ptext34 0E3A  
                                      __ptext26 0D38                                        __ptext18 0E04  
                                      __ptext35 090E                                        __ptext27 0D58  
                                      __ptext19 0C94                                        __ptext36 0E2C  
                                      __ptext28 0DC8                                        __ptext37 0000  
                                      __ptext29 0CEA                                        _distance 0066  
                       TMR0_WriteTimer@timerVal 0001                               ??_TMR0_WriteTimer 0003  
                                 __size_of_ctoa 005A                                   __size_of_main 0236  
                                 __size_of_utoa 0202            __end_of_TMR0_DefaultInterruptHandler 0E3C  
         __size_of_TMR0_DefaultInterruptHandler 0002                    _TMR0_DefaultInterruptHandler 0E3A  
EUSART1_SetOverrunErrorHandler@interruptHandler 0007                                        int$flags 0058  
                                      _vfprintf 0A52              __end_of_INTERRUPT_InterruptManager 003E  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 0099  
                   _EUSART1_FramingErrorHandler 00AC                                     ??_myTMR0ISR 0003  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 0007  
                                      intlevel2 0000                    EPWM2_LoadDutyValue@dutyValue 0007  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 0E18  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 0E0E  
                                    _RCSTA1bits 000FAB                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                        printf@ap 009F  
EUSART1_SetFramingErrorHandler@interruptHandler 0007                                     ??_vfpfcnvrt 004A  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 0055  
                               _TMR0_Initialize 0C00                               __CFG_T3CMX$PORTC0 000000  
                           _EPWM1_LoadDutyValue 0C64                  __end_of_PIN_MANAGER_Initialize 0CC2  
                             __CFG_FOSC$INTIO67 000000                                 _TMR1_Initialize 0D96  
                                  fp__myTMR0ISR 0000                        __end_of_EPWM1_Initialize 0D78  
                          ?_EPWM1_LoadDutyValue 0007  
